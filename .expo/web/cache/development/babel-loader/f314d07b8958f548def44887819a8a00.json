{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sx/Documents/React Native/Foren Tech/consumer_latest/screens/profileScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Container, Accordion, Toast, Title, Header, Content, Thumbnail, Button, Text, Badge, Left, Right, Footer } from \"native-base\";\nimport * as StoreReview from \"expo-store-review\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport * as Updates from \"expo-updates\";\nimport * as Notifications from \"expo-notifications\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { NavigationEvents } from \"react-navigation\";\nimport * as Analytics from \"expo-firebase-analytics\";\n\nvar ProfileSecreen = function (_React$Component) {\n  _inherits(ProfileSecreen, _React$Component);\n\n  var _super = _createSuper(ProfileSecreen);\n\n  function ProfileSecreen(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileSecreen);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidMount = function _callee() {\n      var navigation, user;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              navigation = _this.props.navigation;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n            case 3:\n              user = _context.sent;\n\n              if (user !== null) {\n                _this.setState({\n                  cartItem: navigation.getParam(\"cartItem\"),\n                  user: JSON.parse(user),\n                  isLogin: true,\n                  lan: navigation.getParam(\"lan\"),\n                  location: navigation.getParam(\"location\")\n                });\n              } else {\n                _this.setState({\n                  lan: navigation.getParam(\"lan\")\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.logoutUser = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"user\"));\n\n            case 2:\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"jobs\"));\n\n            case 4:\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"address\"));\n\n            case 6:\n              _this.setState({\n                isLogin: false,\n                cartItem: 0\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.authenticateUser = function () {\n      _this.props.navigation.navigate(\"Login\", {\n        lan: _this.state.lan\n      });\n    };\n\n    _this.displayLanguageModal = function () {\n      _this.setState({\n        modalVisible: true\n      });\n    };\n\n    _this.hideModal = function () {\n      _this.setState({\n        modalVisible: false\n      });\n    };\n\n    _this.likeForense = function () {\n      if (_this.state.lan === \"en\") {\n        Alert.alert(\"Would you mind rating Wafarnalak?\", \"It wont take more than a minute and helps to promote our app. Thanks for your support!\", [{\n          text: \"RATE IT NOW\",\n          onPress: function onPress() {\n            return StoreReview.requestReview();\n          }\n        }, {\n          text: \"REMIND ME LATER\",\n          style: \"cancel\"\n        }, {\n          text: \"NO, THANKS\",\n          style: \"cancel\"\n        }], {\n          cancelable: false\n        });\n      } else {\n        Alert.alert(\"هلا تفضلت بتقييم وفرنا لك ؟\", \"لن يستغرق الأمر اكثر من دقيقة والذي بدوره سيسهم في تحسين تطبيقنا، شكراً لدعمك\", [{\n          text: \"ذكرني بوقت اخر\",\n          style: \"cancel\"\n        }, {\n          text: \"لا، شكراً\",\n          style: \"cancel\"\n        }, {\n          text: \"تقييم الآن\",\n          onPress: function onPress() {\n            return StoreReview.requestReview();\n          }\n        }], {\n          cancelable: false\n        });\n      }\n    };\n\n    _this.rateForense = function () {\n      if (_this.state.lan === \"en\") {\n        Alert.alert(\"Do you like using Wafarnalak?\", \"\", [{\n          text: \"Ask me later\"\n        }, {\n          text: \"Not Really\",\n          style: \"cancel\"\n        }, {\n          text: \"Yes!\",\n          onPress: function onPress() {\n            return _this.likeForense();\n          }\n        }], {\n          cancelable: false\n        });\n      } else {\n        Alert.alert(\"هل احببت استخدام وفرنا لك ؟\", \"\", [{\n          text: \"ذكرني بوقت اخر\"\n        }, {\n          text: \"ليس صحيحاً\",\n          style: \"cancel\"\n        }, {\n          text: \"نعم\",\n          onPress: function onPress() {\n            return _this.likeForense();\n          }\n        }], {\n          cancelable: false\n        });\n      }\n    };\n\n    _this.navigationSetup = function _callee3(option) {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (option == 1) {\n                _this.props.navigation.navigate(\"LandingSecreen\", {\n                  lan: _this.state.lan\n                });\n              }\n\n              if (!(option == 3)) {\n                _context3.next = 13;\n                break;\n              }\n\n              if (!(_this.state.cartItem > 0)) {\n                _context3.next = 12;\n                break;\n              }\n\n              if (!(_this.state.location == \"Riyadh\" || _this.state.location == \"Al-Kharj\")) {\n                _context3.next = 9;\n                break;\n              }\n\n              _this.props.navigation.navigate(\"MyCart\", {\n                lan: _this.state.lan\n              });\n\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(Analytics.logEvent(\"Cart\", {\n                name: \"Cart\",\n                isPackage: false,\n                screen: \"myProfileScreen\",\n                purpose: \"checkout order from myProfile screen\"\n              }));\n\n            case 7:\n              _context3.next = 10;\n              break;\n\n            case 9:\n              Toast.show({\n                text: _this.state.lan == \"en\" ? \"Sorry, currently we are not delivering services in your city, soon we will be with you\" : \"سلة الطلبات فارغة\",\n                position: \"bottom\"\n              });\n\n            case 10:\n              _context3.next = 13;\n              break;\n\n            case 12:\n              Toast.show({\n                text: _this.state.lan == \"en\" ? \"Your cart is empty\" : \"سلة الطلبات فارغة\",\n                position: \"bottom\"\n              });\n\n            case 13:\n              if (option == 2) {\n                _this.props.navigation.navigate(\"MyOrders\", {\n                  cartItem: _this.state.cartItem,\n                  lan: _this.state.lan\n                });\n              }\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.changetoEnglish = function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"lan\", \"en\"));\n\n            case 2:\n              I18nManager.isRTL = false;\n              I18nManager.forceRTL(false);\n              _context4.next = 6;\n              return _regeneratorRuntime.awrap(Updates.reloadAsync());\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.changetoArabic = function _callee5() {\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"lan\", \"ar\"));\n\n            case 2:\n              I18nManager.isRTL = true;\n              I18nManager.forceRTL(true);\n              _context5.next = 6;\n              return _regeneratorRuntime.awrap(Updates.reloadAsync());\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      isLogin: false,\n      modalVisible: false,\n      lan: \"en\",\n      user: {},\n      cartItem: 0,\n      location: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ProfileSecreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2183,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          width: \"100%\",\n          borderBottomWidth: 2,\n          borderBottomColor: \"#0866b0\",\n          backgroundColor: \"#ffffff\",\n          height: 60,\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2184,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 2,\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          position: Platform.OS === \"android\" ? \"absolute\" : \"relative\",\n          alignSelf: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2196,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: \"montserrat_semi_blod\",\n          color: \"#0866b0\",\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2205,\n          columnNumber: 13\n        }\n      }, this.state.lan == \"en\" ? \"My Profile\" : \"ملفي الشخصي\"))), React.createElement(NavigationEvents, {\n        onWillFocus: function onWillFocus() {\n          _this2.componentDidMount();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2217,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          width: Dimensions.get(\"screen\").width,\n          height: Dimensions.get(\"screen\").height - 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2223,\n          columnNumber: 9\n        }\n      }, React.createElement(ScrollView, {\n        contentContainerStyle: {\n          flexGrow: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2229,\n          columnNumber: 11\n        }\n      }, React.createElement(LinearGradient, {\n        colors: [\"#0764af\", \"#6ea8cd\"],\n        start: [0.9, 0.2],\n        end: [0.1, 0.1],\n        style: {\n          width: Dimensions.get(\"screen\").width,\n          height: Dimensions.get(\"screen\").height\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2230,\n          columnNumber: 13\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../assets/Profile-with-Stroke-min.png\"),\n        style: {\n          width: Dimensions.get(\"screen\").width - 60,\n          height: 210,\n          alignSelf: \"center\",\n          marginTop: 10\n        },\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2239,\n          columnNumber: 15\n        }\n      }, this.state.isLogin === true ? React.createElement(View, {\n        style: {\n          position: \"absolute\",\n          right: 10,\n          top: Platform.OS === \"ios\" ? 10 : 22\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2250,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2257,\n          columnNumber: 21\n        }\n      }, this.state.user.name), React.createElement(TouchableOpacity, {\n        onPress: this.logoutUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2260,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: \"#6ea8cd\",\n          width: 60,\n          height: 16,\n          borderRadius: 5,\n          alignSelf: \"flex-end\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2261,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 10,\n          alignSelf: \"center\",\n          paddingTop: Platform.OS === \"ios\" ? 1 : 0,\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2270,\n          columnNumber: 25\n        }\n      }, this.state.lan == \"en\" ? \"Log out\" : \"خروج\")))) : React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2284,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: {\n          backgroundColor: \"white\",\n          width: Dimensions.get(\"screen\").width - 64,\n          marginTop: 15,\n          borderRadius: 12,\n          alignSelf: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2287,\n          columnNumber: 15\n        }\n      }, this.state.isLogin === true ? React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"ProfileUpdate\", {\n            user: _this2.state.user,\n            lan: _this2.state.lan\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2297,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2305,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          margin: 12,\n          backgroundColor: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2306,\n          columnNumber: 23\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2314,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/Profile-Icon/Profile-Icon-min.png\"),\n        style: {\n          width: 30,\n          height: 30\n        },\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2315,\n          columnNumber: 27\n        }\n      }), React.createElement(Text, {\n        style: {\n          paddingTop: 4,\n          marginLeft: 16,\n          color: \"#4a4b4c\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2320,\n          columnNumber: 27\n        }\n      }, this.state.lan == \"en\" ? \"Profile\" : \"ملفي الشخصي\")), React.createElement(View, {\n        style: {\n          paddingTop: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2330,\n          columnNumber: 25\n        }\n      }, React.createElement(Ionicons, {\n        name: this.state.lan == \"en\" ? \"chevron-forward-outline\" : \"chevron-back-outline\",\n        size: 24,\n        color: \"#6ea8cd\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2331,\n          columnNumber: 27\n        }\n      }))), React.createElement(View, {\n        style: {\n          height: 1,\n          backgroundColor: \"lightgray\",\n          width: Dimensions.get(\"screen\").width - 64\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2342,\n          columnNumber: 23\n        }\n      }))) : React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2352,\n          columnNumber: 19\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this.displayLanguageModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2354,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          margin: 12,\n          backgroundColor: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2355,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2363,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/Profile-Icon/Change-Language-min.png\"),\n        style: {\n          width: 30,\n          height: 30\n        },\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2364,\n          columnNumber: 23\n        }\n      }), React.createElement(Text, {\n        style: {\n          paddingTop: 4,\n          marginLeft: 16,\n          color: \"#4a4b4c\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2369,\n          columnNumber: 23\n        }\n      }, this.state.lan == \"en\" ? \"Change Language\" : \"تغيير اللغة\")), React.createElement(View, {\n        style: {\n          paddingTop: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2381,\n          columnNumber: 21\n        }\n      }, React.createElement(Ionicons, {\n        name: this.state.lan == \"en\" ? \"chevron-forward-outline\" : \"chevron-back-outline\",\n        size: 24,\n        color: \"#6ea8cd\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2382,\n          columnNumber: 23\n        }\n      })))), React.createElement(View, {\n        style: {\n          height: 1,\n          backgroundColor: \"lightgray\",\n          width: Dimensions.get(\"screen\").width - 64\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2394,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"HelpScreen\", {\n            lan: _this2.state.lan\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2401,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          margin: 12,\n          backgroundColor: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2408,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2416,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/Profile-Icon/Help-min.png\"),\n        style: {\n          width: 30,\n          height: 30\n        },\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2417,\n          columnNumber: 23\n        }\n      }), React.createElement(Text, {\n        style: {\n          paddingTop: 4,\n          marginLeft: 20,\n          color: \"#4a4b4c\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2422,\n          columnNumber: 23\n        }\n      }, this.state.lan == \"en\" ? \"Help\" : \"مساعدة\")), React.createElement(View, {\n        style: {\n          paddingTop: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2432,\n          columnNumber: 21\n        }\n      }, React.createElement(Ionicons, {\n        name: this.state.lan == \"en\" ? \"chevron-forward-outline\" : \"chevron-back-outline\",\n        size: 24,\n        color: \"#6ea8cd\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2433,\n          columnNumber: 23\n        }\n      })))), React.createElement(View, {\n        style: {\n          height: 1,\n          backgroundColor: \"lightgray\",\n          width: Dimensions.get(\"screen\").width - 64\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2445,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"AboutScreen\", {\n            lan: _this2.state.lan\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2452,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          margin: 12,\n          backgroundColor: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2459,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2467,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/Profile-Icon/About-min.png\"),\n        style: {\n          width: 30,\n          height: 30\n        },\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2468,\n          columnNumber: 23\n        }\n      }), React.createElement(Text, {\n        style: {\n          paddingTop: 4,\n          marginLeft: 20,\n          color: \"#4a4b4c\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2473,\n          columnNumber: 23\n        }\n      }, this.state.lan == \"en\" ? \"About Wafarnalak\" : \"عن وفرنا لك\")), React.createElement(View, {\n        style: {\n          paddingTop: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2485,\n          columnNumber: 21\n        }\n      }, React.createElement(Ionicons, {\n        name: this.state.lan == \"en\" ? \"chevron-forward-outline\" : \"chevron-back-outline\",\n        size: 24,\n        color: \"#6ea8cd\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2486,\n          columnNumber: 23\n        }\n      })))), React.createElement(View, {\n        style: {\n          height: 1,\n          backgroundColor: \"lightgray\",\n          width: Dimensions.get(\"screen\").width - 64\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2498,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: this.rateForense,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2505,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          margin: 12,\n          backgroundColor: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2506,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2514,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/Profile-Icon/Rate-min.png\"),\n        style: {\n          width: 30,\n          height: 30\n        },\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2515,\n          columnNumber: 23\n        }\n      }), React.createElement(Text, {\n        style: {\n          paddingTop: 4,\n          marginLeft: 20,\n          color: \"#4a4b4c\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2520,\n          columnNumber: 23\n        }\n      }, this.state.lan == \"en\" ? \"Rate Wafarnalak\" : \"قيٌم وفرنا لك\")), React.createElement(View, {\n        style: {\n          paddingTop: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2532,\n          columnNumber: 21\n        }\n      }, React.createElement(Ionicons, {\n        name: this.state.lan == \"en\" ? \"chevron-forward-outline\" : \"chevron-back-outline\",\n        size: 24,\n        color: \"#6ea8cd\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2533,\n          columnNumber: 23\n        }\n      })))), this.state.isLogin === true ? React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2547,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 1,\n          backgroundColor: \"lightgray\",\n          width: Dimensions.get(\"screen\").width - 64\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2548,\n          columnNumber: 21\n        }\n      }), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"MyOrdersSecreen\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2555,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"PointsScreen\", {\n            lan: _this2.state.lan\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2560,\n          columnNumber: 23\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          margin: 12,\n          backgroundColor: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2567,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2575,\n          columnNumber: 27\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/Profile-Icon/Points-min.png\"),\n        style: {\n          width: 30,\n          height: 30\n        },\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2576,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: {\n          paddingTop: 4,\n          marginLeft: 20,\n          color: \"#4a4b4c\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2581,\n          columnNumber: 29\n        }\n      }, this.state.lan == \"en\" ? \"Wafarnalak Points\" : \"نقاط وفرنا لك\")), React.createElement(View, {\n        style: {\n          paddingTop: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2593,\n          columnNumber: 27\n        }\n      }, React.createElement(Ionicons, {\n        name: this.state.lan == \"en\" ? \"chevron-forward-outline\" : \"chevron-back-outline\",\n        size: 24,\n        color: \"#6ea8cd\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2594,\n          columnNumber: 29\n        }\n      }))))), React.createElement(View, {\n        style: {\n          height: 1,\n          backgroundColor: \"lightgray\",\n          width: Dimensions.get(\"screen\").width - 64\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2607,\n          columnNumber: 21\n        }\n      })) : React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2616,\n          columnNumber: 19\n        }\n      }), this.state.isLogin === true ? React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"ReferralScreen\", {\n            user: _this2.state.user,\n            lan: _this2.state.lan\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2620,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          margin: 12,\n          backgroundColor: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2628,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2636,\n          columnNumber: 23\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/Profile-Icon/Referral-min.png\"),\n        style: {\n          width: 30,\n          height: 30\n        },\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2637,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: {\n          paddingTop: 4,\n          marginLeft: 20,\n          color: \"#4a4b4c\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2642,\n          columnNumber: 25\n        }\n      }, this.state.lan == \"en\" ? \"Wafarnalak Referral\" : \"إحالة وفرنا لك (رمز الدعوة)\")), React.createElement(View, {\n        style: {\n          paddingTop: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2654,\n          columnNumber: 23\n        }\n      }, React.createElement(Ionicons, {\n        name: this.state.lan == \"en\" ? \"chevron-forward-outline\" : \"chevron-back-outline\",\n        size: 24,\n        color: \"#6ea8cd\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2655,\n          columnNumber: 25\n        }\n      })))) : React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2668,\n          columnNumber: 19\n        }\n      })), this.state.isLogin === false ? React.createElement(TouchableOpacity, {\n        onPress: this.authenticateUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2672,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          backgroundColor: \"#6ea8cd\",\n          borderRadius: 12,\n          width: Dimensions.get(\"screen\").width - 120,\n          alignSelf: \"center\",\n          marginTop: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2673,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          margin: 12,\n          alignSelf: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2682,\n          columnNumber: 21\n        }\n      }, this.state.lan == \"en\" ? \"Sign In\" : \"دخول\"))) : React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2694,\n          columnNumber: 17\n        }\n      }), React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: this.state.modalVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2696,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: {\n          marginTop: 220,\n          height: 255,\n          borderRadius: 20,\n          width: 350,\n          backgroundColor: \"#0764af\",\n          alignSelf: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2701,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          alignSelf: \"center\",\n          marginTop: -24\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2711,\n          columnNumber: 19\n        }\n      }, React.createElement(Thumbnail, {\n        source: require(\"../assets/Icon2.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2714,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          position: \"absolute\",\n          right: 6,\n          top: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2716,\n          columnNumber: 19\n        }\n      }, React.createElement(Ionicons, {\n        onPress: this.hideModal,\n        name: \"ios-close-circle-outline\",\n        size: 35,\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2717,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          alignSelf: \"center\",\n          position: \"absolute\",\n          top: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2724,\n          columnNumber: 19\n        }\n      }, this.state.lan === \"en\" ? React.createElement(Text, {\n        style: {\n          color: \"white\",\n          fontSize: 20,\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2732,\n          columnNumber: 23\n        }\n      }, \"Select Language\") : React.createElement(Text, {\n        style: {\n          fontFamily: \"montserrat_semi_blod\",\n          color: \"white\",\n          fontSize: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2742,\n          columnNumber: 23\n        }\n      }, \"\\u0627\\u062E\\u062A\\u0627\\u0631 \\u0627\\u0644\\u0644\\u063A\\u0629\")), React.createElement(View, {\n        style: {\n          alignSelf: \"center\",\n          position: \"absolute\",\n          top: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2753,\n          columnNumber: 19\n        }\n      }, React.createElement(Button, {\n        style: {\n          width: 250,\n          borderRadius: 12,\n          height: 40,\n          backgroundColor: \"#4e9fd1\",\n          top: 0\n        },\n        onPress: this.changetoEnglish,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2760,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          alignSelf: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2770,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2777,\n          columnNumber: 25\n        }\n      }, \"English\"))), React.createElement(Button, {\n        style: {\n          width: 250,\n          borderRadius: 12,\n          height: 40,\n          backgroundColor: \"#4e9fd1\",\n          top: 14\n        },\n        onPress: this.changetoArabic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2780,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          alignSelf: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2790,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2797,\n          columnNumber: 25\n        }\n      }, \"\\u0627\\u0644\\u0639\\u0631\\u0628\\u064A\\u0629\"))))))))), React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          height: 50,\n          alignSelf: \"center\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n          position: \"absolute\",\n          alignItems: \"flex-end\",\n          bottom: 0,\n          left: 0,\n          backgroundColor: \"white\",\n          paddingHorizontal: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2814,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.navigationSetup(1);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2829,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2830,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          alignSelf: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2831,\n          columnNumber: 15\n        }\n      }, React.createElement(Ionicons, {\n        name: \"md-apps\",\n        size: 28,\n        color: \"#ccc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2832,\n          columnNumber: 17\n        }\n      })), React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          fontSize: 12,\n          color: \"#ccc\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2834,\n          columnNumber: 15\n        }\n      }, this.state.lan == \"en\" ? \"Categories\" : \"فئات الخدمات\"))), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.navigationSetup(2);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2841,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2842,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          alignSelf: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2843,\n          columnNumber: 15\n        }\n      }, React.createElement(Image, {\n        resizeMode: \"contain\",\n        source: require(\"../assets/myOrder.png\"),\n        style: {\n          height: 29,\n          width: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2844,\n          columnNumber: 17\n        }\n      })), React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          fontSize: 12,\n          color: \"#ccc\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2850,\n          columnNumber: 15\n        }\n      }, this.state.lan == \"en\" ? \"My Orders\" : \"طلباتي\"))), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.navigationSetup(3);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2861,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2862,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          alignSelf: \"center\",\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2863,\n          columnNumber: 15\n        }\n      }, React.createElement(Ionicons, {\n        name: \"md-cart\",\n        size: 28,\n        color: \"#ccc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2864,\n          columnNumber: 17\n        }\n      }), this.state.cartItem > 0 ? React.createElement(Badge, {\n        danger: true,\n        style: {\n          height: 20,\n          width: 20,\n          borderRadius: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2866,\n          columnNumber: 19\n        }\n      }, React.createElement(View, {\n        style: {\n          left: 0,\n          right: 0,\n          bottom: 0,\n          top: 0,\n          position: \"absolute\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2870,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 10,\n          justifyContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2879,\n          columnNumber: 23\n        }\n      }, this.state.cartItem))) : React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2891,\n          columnNumber: 19\n        }\n      })), React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          fontSize: 12,\n          color: \"#ccc\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2894,\n          columnNumber: 15\n        }\n      }, this.state.lan == \"en\" ? \"My Cart\" : \"سلة الطلب خاصتي\"))), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2901,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          alignSelf: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2902,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2903,\n          columnNumber: 15\n        }\n      }, React.createElement(Ionicons, {\n        name: this.state.isLogin == true ? \"ios-person\" : \"ios-information-circle\",\n        size: 28,\n        color: \"#0865b0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2904,\n          columnNumber: 17\n        }\n      }), this.state.user && this.state.user.name == \"\" || this.state.user && this.state.user.name == null || this.state.user && this.state.user.email == \"\" || this.state.user && this.state.user.email == null ? React.createElement(View, {\n        style: {\n          width: 4,\n          height: 4,\n          borderRadius: 2,\n          backgroundColor: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2917,\n          columnNumber: 19\n        }\n      }) : React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2926,\n          columnNumber: 19\n        }\n      }))), React.createElement(Text, {\n        style: {\n          textAlign: \"center\",\n          fontSize: 12,\n          color: \"#0865b0\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2930,\n          columnNumber: 13\n        }\n      }, this.state.isLogin == true ? this.state.lan == \"en\" ? \"My Profile\" : \"ملفي الشخصي\" : this.state.lan == \"en\" ? \"About\" : \"المزيد\"))));\n    }\n  }]);\n\n  return ProfileSecreen;\n}(React.Component);\n\nexport { ProfileSecreen as default };","map":{"version":3,"sources":["/Users/sx/Documents/React Native/Foren Tech/consumer_latest/screens/profileScreen.js"],"names":["React","AsyncStorage","Container","Accordion","Toast","Title","Header","Content","Thumbnail","Button","Text","Badge","Left","Right","Footer","StoreReview","Ionicons","Updates","Notifications","LinearGradient","NavigationEvents","Analytics","ProfileSecreen","props","componentDidMount","navigation","getItem","user","setState","cartItem","getParam","JSON","parse","isLogin","lan","location","logoutUser","removeItem","authenticateUser","navigate","state","displayLanguageModal","modalVisible","hideModal","likeForense","Alert","alert","text","onPress","requestReview","style","cancelable","rateForense","navigationSetup","option","logEvent","name","isPackage","screen","purpose","show","position","changetoEnglish","setItem","I18nManager","isRTL","forceRTL","reloadAsync","changetoArabic","flex","width","borderBottomWidth","borderBottomColor","backgroundColor","height","flexDirection","alignItems","justifyContent","Platform","OS","alignSelf","fontFamily","color","fontSize","Dimensions","get","flexGrow","require","marginTop","right","top","borderRadius","paddingTop","margin","marginLeft","fontWeight","bottom","left","paddingHorizontal","textAlign","email","Component"],"mappings":"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","sourcesContent":["// import React from \"react\";\n// import {\n//   View,\n//   Image,\n//   Platform,\n//   Dimensions,\n//   Modal,\n//   Alert,\n//   ImageBackground,\n//   TouchableOpacity,\n//   AsyncStorage,\n//   I18nManager,\n//   ScrollView\n// } from \"react-native\";\n// import {\n//   Container,\n//   Accordion,\n//   Toast,\n//   Title,\n//   Header,\n//   Content,\n//   Thumbnail,\n//   Button,\n//   Text,\n//   Badge,\n//   Left,\n//   Right,\n//   Footer\n// } from \"native-base\";\n// import * as StoreReview from \"expo-store-review\";\n// import { Ionicons } from \"@expo/vector-icons\";\n// import * as Updates from \"expo-updates\";\n// import * as Notifications from \"expo-notifications\";\n// import { LinearGradient } from \"expo-linear-gradient\";\n// import { NavigationEvents } from \"react-navigation\";\n// import * as Analytics from \"expo-firebase-analytics\";\n\n// export default class ProfileSecreen extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       isLogin: false,\n//       modalVisible: false,\n//       lan: \"en\",\n//       user: {},\n//       cartItem: 0,\n//       location: \"\"\n//     };\n//   }\n//   componentDidMount = async () => {\n//     const { navigation } = this.props;\n//     let user = await AsyncStorage.getItem(\"user\");\n//     if (user !== null) {\n//       this.setState({\n//         cartItem: navigation.getParam(\"cartItem\"),\n//         user: JSON.parse(user),\n//         isLogin: true,\n//         lan: navigation.getParam(\"lan\"),\n//         location: navigation.getParam(\"location\")\n//       });\n//     } else {\n//       this.setState({ lan: navigation.getParam(\"lan\") });\n//     }\n//   };\n//   logoutUser = async () => {\n//     await AsyncStorage.removeItem(\"user\");\n//     await AsyncStorage.removeItem(\"jobs\");\n//     await AsyncStorage.removeItem(\"address\");\n//     this.setState({ isLogin: false, cartItem: 0 });\n//   };\n//   authenticateUser = () => {\n//     this.props.navigation.navigate(\"Login\", { lan: this.state.lan });\n//   };\n//   displayLanguageModal = () => {\n//     this.setState({ modalVisible: true });\n//   };\n//   hideModal = () => {\n//     this.setState({ modalVisible: false });\n//   };\n//   likeForense = () => {\n//     if (this.state.lan === \"en\") {\n//       Alert.alert(\n//         \"Would you mind rating Wafarnalak?\",\n//         \"It wont take more than a minute and helps to promote our app. Thanks for your support!\",\n//         [\n//           { text: \"RATE IT NOW\", onPress: () => StoreReview.requestReview() },\n//           {\n//             text: \"REMIND ME LATER\",\n\n//             style: \"cancel\"\n//           },\n//           {\n//             text: \"NO, THANKS\",\n\n//             style: \"cancel\"\n//           }\n//         ],\n//         { cancelable: false }\n//       );\n//     } else {\n//       Alert.alert(\n//         \"هلا تفضلت بتقييم وفرنا لك ؟\",\n//         \"لن يستغرق الأمر اكثر من دقيقة والذي بدوره سيسهم في تحسين تطبيقنا، شكراً لدعمك\",\n//         [\n//           {\n//             text: \"ذكرني بوقت اخر\",\n\n//             style: \"cancel\"\n//           },\n//           {\n//             text: \"لا، شكراً\",\n\n//             style: \"cancel\"\n//           },\n//           { text: \"تقييم الآن\", onPress: () => StoreReview.requestReview() }\n//         ],\n//         { cancelable: false }\n//       );\n//     }\n//   };\n//   rateForense = () => {\n//     if (this.state.lan === \"en\") {\n//       Alert.alert(\n//         \"Do you like using Wafarnalak?\",\n//         \"\",\n//         [\n//           {\n//             text: \"Ask me later\"\n//           },\n//           {\n//             text: \"Not Really\",\n\n//             style: \"cancel\"\n//           },\n//           {\n//             text: \"Yes!\",\n//             onPress: () => this.likeForense()\n//           }\n//         ],\n//         { cancelable: false }\n//       );\n//     } else {\n//       Alert.alert(\n//         \"هل احببت استخدام وفرنا لك ؟\",\n//         \"\",\n//         [\n//           {\n//             text: \"ذكرني بوقت اخر\"\n//           },\n//           {\n//             text: \"ليس صحيحاً\",\n\n//             style: \"cancel\"\n//           },\n//           {\n//             text: \"نعم\",\n//             onPress: () => this.likeForense()\n//           }\n//         ],\n//         { cancelable: false }\n//       );\n//     }\n//   };\n//   navigationSetup = async option => {\n//     if (option == 1) {\n//       this.props.navigation.navigate(\"LandingSecreen\", { lan: this.state.lan });\n//     }\n//     if (option == 3) {\n//       if (this.state.cartItem > 0) {\n//         if (\n//           this.state.location == \"Riyadh\" ||\n//           this.state.location == \"Al-Kharj\"\n//         ) {\n//           this.props.navigation.navigate(\"MyCart\", { lan: this.state.lan });\n//           await Analytics.logEvent(\"Cart\", {\n//             name: \"Cart\",\n//             isPackage: false,\n//             screen: \"myProfileScreen\",\n//             purpose: \"checkout order from myProfile screen\"\n//           });\n//         } else {\n//           Toast.show({\n//             text:\n//               this.state.lan == \"en\"\n//                 ? \"Sorry, currently we are not delivering services in your city, soon we will be with you\"\n//                 : \"سلة الطلبات فارغة\",\n//             position: \"bottom\"\n//           });\n//         }\n//       } else {\n//         Toast.show({\n//           text:\n//             this.state.lan == \"en\" ? \"Your cart is empty\" : \"سلة الطلبات فارغة\",\n//           position: \"bottom\"\n//         });\n//       }\n//     }\n//     if (option == 2) {\n//       this.props.navigation.navigate(\"MyOrders\", {\n//         cartItem: this.state.cartItem,\n//         lan: this.state.lan\n//       });\n//     }\n//   };\n\n//   changetoEnglish = async () => {\n//     await AsyncStorage.setItem(\"lan\", \"en\");\n//     I18nManager.isRTL = false;\n//     I18nManager.forceRTL(false);\n//     await Updates.reloadAsync();\n//     //this.updateLanguage(1);\n//   };\n//   changetoArabic = async () => {\n//     await AsyncStorage.setItem(\"lan\", \"ar\");\n//     I18nManager.isRTL = true;\n//     I18nManager.forceRTL(true);\n//     await Updates.reloadAsync();\n//     //this.updateLanguage(2);\n//   };\n//   render() {\n//     return (\n//       <View style={{ flex: 1 }}>\n//         {/* <Header\n//           style={{\n//             marginTop: 0,\n//             borderBottomWidth: 2,\n//             borderBottomColor: \"#0866b0\",\n//             backgroundColor: \"#ffffff\",\n//             height: 60,\n//             justifyContent: \"center\"\n//           }}\n//         >\n//           <Left style={{ marginLeft: 10 }}></Left>\n//           <View\n//             style={{\n//               flex: 2,\n//               justifyContent: \"center\",\n//               alignItems: \"center\",\n//               position: Platform.OS === \"android\" ? \"absolute\" : \"relative\",\n//               alignSelf: \"center\"\n//             }}\n//           >\n//             <Title\n//               style={{\n//                 fontFamily: \"montserrat_semi_blod\",\n//                 color: \"#0866b0\",\n//                 fontSize: 18\n//               }}\n//             >\n//               {this.state.lan == \"en\" ? \"My Profile\" : \"ملفي الشخصي\"}\n//             </Title>\n//           </View>\n//           <Right />\n//         </Header> */}\n//         <View\n//           style={{\n//             width: \"100%\",\n//             borderBottomWidth: 2,\n//             borderBottomColor: \"#0866b0\",\n//             backgroundColor: \"#ffffff\",\n//             height: 60,\n//             flexDirection: \"row\",\n//             alignItems: \"center\",\n//             justifyContent: \"center\"\n//           }}\n//         >\n//           <View\n//             style={{\n//               flex: 2,\n//               justifyContent: \"center\",\n//               alignItems: \"center\",\n//               position: Platform.OS === \"android\" ? \"absolute\" : \"relative\",\n//               alignSelf: \"center\"\n//             }}\n//           >\n//             <Text\n//               style={{\n//                 fontFamily: \"montserrat_semi_blod\",\n//                 color: \"#0866b0\",\n//                 fontSize: 18\n//               }}\n//             >\n//               {this.state.lan == \"en\" ? \"My Profile\" : \"ملفي الشخصي\"}\n//             </Text>\n//           </View>\n//         </View>\n//         {\n//           <NavigationEvents\n//             onWillFocus={() => {\n//               this.componentDidMount();\n//             }}\n//           />\n//         }\n\n//         <LinearGradient\n//           colors={[\"#0764af\", \"#6ea8cd\"]}\n//           start={[0.9, 0.2]}\n//           end={[0.1, 0.1]}\n//           style={{\n//             width: Dimensions.get(\"screen\").width,\n//             height: Dimensions.get(\"screen\").height - 110\n//           }}\n//         >\n//           <ScrollView\n//             contentContainerStyle={{\n//               flexGrow: 1,\n//               height: Dimensions.get(\"screen\").height - 120,\n//               flex: 1\n//             }}\n//           >\n//             <ImageBackground\n//               source={require(\"../assets/Profile-with-Stroke-min.png\")}\n//               style={{\n//                 width: Dimensions.get(\"screen\").width - 60,\n//                 height: 210,\n//                 alignSelf: \"center\",\n//                 marginTop: 10\n//               }}\n//               resizeMode=\"contain\"\n//             >\n//               {this.state.isLogin === true ? (\n//                 <View\n//                   style={{\n//                     position: \"absolute\",\n//                     right: 10,\n//                     top: Platform.OS === \"ios\" ? 10 : 22\n//                   }}\n//                 >\n//                   <Text style={{ color: \"white\" }}>{this.state.user.name}</Text>\n//                   <TouchableOpacity onPress={this.logoutUser}>\n//                     <View\n//                       style={{\n//                         backgroundColor: \"#6ea8cd\",\n//                         width: 60,\n//                         height: 16,\n//                         borderRadius: 5,\n//                         alignSelf: \"flex-end\"\n//                       }}\n//                     >\n//                       <Text\n//                         style={{\n//                           fontSize: 10,\n//                           alignSelf: \"center\",\n//                           paddingTop: Platform.OS === \"ios\" ? 1 : 0,\n//                           color: \"white\"\n//                         }}\n//                       >\n//                         {this.state.lan == \"en\" ? \"Log out\" : \"خروج\"}\n//                       </Text>\n//                     </View>\n//                   </TouchableOpacity>\n//                 </View>\n//               ) : (\n//                 <View></View>\n//               )}\n//             </ImageBackground>\n//             <View\n//               style={{\n//                 backgroundColor: \"white\",\n//                 width: Dimensions.get(\"screen\").width - 64,\n//                 marginTop: 15,\n//                 borderRadius: 12,\n//                 alignSelf: \"center\"\n//               }}\n//             >\n//               {this.state.isLogin === true ? (\n//                 <TouchableOpacity\n//                   onPress={() =>\n//                     this.props.navigation.navigate(\"ProfileUpdate\", {\n//                       user: this.state.user,\n//                       lan: this.state.lan\n//                     })\n//                   }\n//                 >\n//                   <View>\n//                     <View\n//                       style={{\n//                         flexDirection: \"row\",\n//                         justifyContent: \"space-between\",\n//                         margin: 12,\n//                         backgroundColor: \"white\"\n//                       }}\n//                     >\n//                       <View style={{ flexDirection: \"row\" }}>\n//                         <Image\n//                           source={require(\"../assets/Profile-Icon/Profile-Icon-min.png\")}\n//                           style={{ width: 30, height: 30 }}\n//                           resizeMode=\"contain\"\n//                         />\n//                         <Text\n//                           style={{\n//                             paddingTop: 4,\n//                             marginLeft: 16,\n//                             color: \"#4a4b4c\"\n//                           }}\n//                         >\n//                           {this.state.lan == \"en\" ? \"Profile\" : \"ملفي الشخصي\"}\n//                         </Text>\n//                       </View>\n//                       <View style={{ paddingTop: 5 }}>\n//                         <Ionicons\n//                           name={\n//                             this.state.lan == \"en\"\n//                               ? \"chevron-forward-outline\"\n//                               : \"chevron-back-outline\"\n//                           }\n//                           size={24}\n//                           color={\"#6ea8cd\"}\n//                         />\n//                       </View>\n//                     </View>\n//                     <View\n//                       style={{\n//                         height: 1,\n//                         backgroundColor: \"lightgray\",\n//                         width: Dimensions.get(\"screen\").width - 64\n//                       }}\n//                     ></View>\n//                   </View>\n//                 </TouchableOpacity>\n//               ) : (\n//                 <View></View>\n//               )}\n//               <TouchableOpacity onPress={this.displayLanguageModal}>\n//                 <View\n//                   style={{\n//                     flexDirection: \"row\",\n//                     justifyContent: \"space-between\",\n//                     margin: 12,\n//                     backgroundColor: \"white\"\n//                   }}\n//                 >\n//                   <View style={{ flexDirection: \"row\" }}>\n//                     <Image\n//                       source={require(\"../assets/Profile-Icon/Change-Language-min.png\")}\n//                       style={{ width: 30, height: 30 }}\n//                       resizeMode=\"contain\"\n//                     />\n//                     <Text\n//                       style={{\n//                         paddingTop: 4,\n//                         marginLeft: 16,\n//                         color: \"#4a4b4c\"\n//                       }}\n//                     >\n//                       {this.state.lan == \"en\"\n//                         ? \"Change Language\"\n//                         : \"تغيير اللغة\"}\n//                     </Text>\n//                   </View>\n//                   <View style={{ paddingTop: 5 }}>\n//                     <Ionicons\n//                       name={\n//                         this.state.lan == \"en\"\n//                           ? \"chevron-forward-outline\"\n//                           : \"chevron-back-outline\"\n//                       }\n//                       size={24}\n//                       color={\"#6ea8cd\"}\n//                     />\n//                   </View>\n//                 </View>\n//               </TouchableOpacity>\n//               <View\n//                 style={{\n//                   height: 1,\n//                   backgroundColor: \"lightgray\",\n//                   width: Dimensions.get(\"screen\").width - 64\n//                 }}\n//               ></View>\n//               <TouchableOpacity\n//                 onPress={() =>\n//                   this.props.navigation.navigate(\"HelpScreen\", {\n//                     lan: this.state.lan\n//                   })\n//                 }\n//               >\n//                 <View\n//                   style={{\n//                     flexDirection: \"row\",\n//                     justifyContent: \"space-between\",\n//                     margin: 12,\n//                     backgroundColor: \"white\"\n//                   }}\n//                 >\n//                   <View style={{ flexDirection: \"row\" }}>\n//                     <Image\n//                       source={require(\"../assets/Profile-Icon/Help-min.png\")}\n//                       style={{ width: 30, height: 30 }}\n//                       resizeMode=\"contain\"\n//                     />\n//                     <Text\n//                       style={{\n//                         paddingTop: 4,\n//                         marginLeft: 20,\n//                         color: \"#4a4b4c\"\n//                       }}\n//                     >\n//                       {this.state.lan == \"en\" ? \"Help\" : \"مساعدة\"}\n//                     </Text>\n//                   </View>\n//                   <View style={{ paddingTop: 5 }}>\n//                     <Ionicons\n//                       name={\n//                         this.state.lan == \"en\"\n//                           ? \"chevron-forward-outline\"\n//                           : \"chevron-back-outline\"\n//                       }\n//                       size={24}\n//                       color={\"#6ea8cd\"}\n//                     />\n//                   </View>\n//                 </View>\n//               </TouchableOpacity>\n//               <View\n//                 style={{\n//                   height: 1,\n//                   backgroundColor: \"lightgray\",\n//                   width: Dimensions.get(\"screen\").width - 64\n//                 }}\n//               ></View>\n//               <TouchableOpacity\n//                 onPress={() =>\n//                   this.props.navigation.navigate(\"AboutScreen\", {\n//                     lan: this.state.lan\n//                   })\n//                 }\n//               >\n//                 <View\n//                   style={{\n//                     flexDirection: \"row\",\n//                     justifyContent: \"space-between\",\n//                     margin: 12,\n//                     backgroundColor: \"white\"\n//                   }}\n//                 >\n//                   <View style={{ flexDirection: \"row\" }}>\n//                     <Image\n//                       source={require(\"../assets/Profile-Icon/About-min.png\")}\n//                       style={{ width: 30, height: 30 }}\n//                       resizeMode=\"contain\"\n//                     />\n//                     <Text\n//                       style={{\n//                         paddingTop: 4,\n//                         marginLeft: 20,\n//                         color: \"#4a4b4c\"\n//                       }}\n//                     >\n//                       {this.state.lan == \"en\"\n//                         ? \"About Wafarnalak\"\n//                         : \"عن وفرنا لك\"}\n//                     </Text>\n//                   </View>\n//                   <View style={{ paddingTop: 5 }}>\n//                     <Ionicons\n//                       name={\n//                         this.state.lan == \"en\"\n//                           ? \"chevron-forward-outline\"\n//                           : \"chevron-back-outline\"\n//                       }\n//                       size={24}\n//                       color={\"#6ea8cd\"}\n//                     />\n//                   </View>\n//                 </View>\n//               </TouchableOpacity>\n//               <View\n//                 style={{\n//                   height: 1,\n//                   backgroundColor: \"lightgray\",\n//                   width: Dimensions.get(\"screen\").width - 64\n//                 }}\n//               ></View>\n//               <TouchableOpacity onPress={this.rateForense}>\n//                 <View\n//                   style={{\n//                     flexDirection: \"row\",\n//                     justifyContent: \"space-between\",\n//                     margin: 12,\n//                     backgroundColor: \"white\"\n//                   }}\n//                 >\n//                   <View style={{ flexDirection: \"row\" }}>\n//                     <Image\n//                       source={require(\"../assets/Profile-Icon/Rate-min.png\")}\n//                       style={{ width: 30, height: 30 }}\n//                       resizeMode=\"contain\"\n//                     />\n//                     <Text\n//                       style={{\n//                         paddingTop: 4,\n//                         marginLeft: 20,\n//                         color: \"#4a4b4c\"\n//                       }}\n//                     >\n//                       {this.state.lan == \"en\"\n//                         ? \"Rate Wafarnalak\"\n//                         : \"قيٌم وفرنا لك\"}\n//                     </Text>\n//                   </View>\n//                   <View style={{ paddingTop: 5 }}>\n//                     <Ionicons\n//                       name={\n//                         this.state.lan == \"en\"\n//                           ? \"chevron-forward-outline\"\n//                           : \"chevron-back-outline\"\n//                       }\n//                       size={24}\n//                       color={\"#6ea8cd\"}\n//                     />\n//                   </View>\n//                 </View>\n//               </TouchableOpacity>\n\n//               {this.state.isLogin === true ? (\n//                 <View>\n//                   <View\n//                     style={{\n//                       height: 1,\n//                       backgroundColor: \"lightgray\",\n//                       width: Dimensions.get(\"screen\").width - 64\n//                     }}\n//                   ></View>\n//                   <TouchableOpacity\n//                     onPress={() =>\n//                       this.props.navigation.navigate(\"MyOrdersSecreen\")\n//                     }\n//                   >\n//                     <TouchableOpacity\n//                       onPress={() =>\n//                         this.props.navigation.navigate(\"PointsScreen\", {\n//                           lan: this.state.lan\n//                         })\n//                       }\n//                     >\n//                       <View\n//                         style={{\n//                           flexDirection: \"row\",\n//                           justifyContent: \"space-between\",\n//                           margin: 12,\n//                           backgroundColor: \"white\"\n//                         }}\n//                       >\n//                         <View style={{ flexDirection: \"row\" }}>\n//                           <Image\n//                             source={require(\"../assets/Profile-Icon/Points-min.png\")}\n//                             style={{ width: 30, height: 30 }}\n//                             resizeMode=\"contain\"\n//                           />\n//                           <Text\n//                             style={{\n//                               paddingTop: 4,\n//                               marginLeft: 20,\n//                               color: \"#4a4b4c\"\n//                             }}\n//                           >\n//                             {this.state.lan == \"en\"\n//                               ? \"Wafarnalak Points\"\n//                               : \"نقاط وفرنا لك\"}\n//                           </Text>\n//                         </View>\n//                         <View style={{ paddingTop: 5 }}>\n//                           <Ionicons\n//                             name={\n//                               this.state.lan == \"en\"\n//                                 ? \"chevron-forward-outline\"\n//                                 : \"chevron-back-outline\"\n//                             }\n//                             size={24}\n//                             color={\"#6ea8cd\"}\n//                           />\n//                         </View>\n//                       </View>\n//                     </TouchableOpacity>\n//                   </TouchableOpacity>\n//                   <View\n//                     style={{\n//                       height: 1,\n//                       backgroundColor: \"lightgray\",\n//                       width: Dimensions.get(\"screen\").width - 64\n//                     }}\n//                   ></View>\n//                 </View>\n//               ) : (\n//                 <View></View>\n//               )}\n\n//               {this.state.isLogin === true ? (\n//                 <TouchableOpacity\n//                   onPress={() =>\n//                     this.props.navigation.navigate(\"ReferralScreen\", {\n//                       user: this.state.user,\n//                       lan: this.state.lan\n//                     })\n//                   }\n//                 >\n//                   <View\n//                     style={{\n//                       flexDirection: \"row\",\n//                       justifyContent: \"space-between\",\n//                       margin: 12,\n//                       backgroundColor: \"white\"\n//                     }}\n//                   >\n//                     <View style={{ flexDirection: \"row\" }}>\n//                       <Image\n//                         source={require(\"../assets/Profile-Icon/Referral-min.png\")}\n//                         style={{ width: 30, height: 30 }}\n//                         resizeMode=\"contain\"\n//                       />\n//                       <Text\n//                         style={{\n//                           paddingTop: 4,\n//                           marginLeft: 20,\n//                           color: \"#4a4b4c\"\n//                         }}\n//                       >\n//                         {this.state.lan == \"en\"\n//                           ? \"Wafarnalak Referral\"\n//                           : \"إحالة وفرنا لك (رمز الدعوة)\"}\n//                       </Text>\n//                     </View>\n//                     <View style={{ paddingTop: 5 }}>\n//                       <Ionicons\n//                         name={\n//                           this.state.lan == \"en\"\n//                             ? \"chevron-forward-outline\"\n//                             : \"chevron-back-outline\"\n//                         }\n//                         size={24}\n//                         color={\"#6ea8cd\"}\n//                       />\n//                     </View>\n//                   </View>\n//                 </TouchableOpacity>\n//               ) : (\n//                 <View></View>\n//               )}\n//             </View>\n//             {this.state.isLogin === false ? (\n//               <TouchableOpacity onPress={this.authenticateUser}>\n//                 <View\n//                   style={{\n//                     backgroundColor: \"#6ea8cd\",\n//                     borderRadius: 12,\n//                     width: Dimensions.get(\"screen\").width - 120,\n//                     alignSelf: \"center\",\n//                     marginTop: 15\n//                   }}\n//                 >\n//                   <Text\n//                     style={{ color: \"white\", margin: 12, alignSelf: \"center\" }}\n//                   >\n//                     {this.state.lan == \"en\" ? \"Sign In\" : \"دخول\"}\n//                   </Text>\n//                 </View>\n//               </TouchableOpacity>\n//             ) : (\n//               <View></View>\n//             )}\n//             <Modal\n//               animationType=\"slide\"\n//               transparent={true}\n//               visible={this.state.modalVisible}\n//             >\n//               <View\n//                 style={{\n//                   marginTop: 220,\n//                   height: 255,\n//                   borderRadius: 20,\n//                   width: 350,\n//                   backgroundColor: \"#0764af\",\n//                   alignSelf: \"center\"\n//                 }}\n//               >\n//                 <View style={{ flex: 1, alignSelf: \"center\", marginTop: -24 }}>\n//                   <Thumbnail source={require(\"../assets/Icon2.png\")} />\n//                 </View>\n//                 <View style={{ position: \"absolute\", right: 6, top: 10 }}>\n//                   <Ionicons\n//                     onPress={this.hideModal}\n//                     name=\"ios-close-circle-outline\"\n//                     size={35}\n//                     color=\"red\"\n//                   />\n//                 </View>\n//                 <View\n//                   style={{ alignSelf: \"center\", position: \"absolute\", top: 50 }}\n//                 >\n//                   {this.state.lan === \"en\" ? (\n//                     <Text\n//                       style={{\n//                         color: \"white\",\n//                         fontSize: 20,\n//                         fontWeight: \"bold\"\n//                       }}\n//                     >\n//                       Select Language\n//                     </Text>\n//                   ) : (\n//                     <Text\n//                       style={{\n//                         fontFamily: \"montserrat_semi_blod\",\n//                         color: \"white\",\n//                         fontSize: 30\n//                       }}\n//                     >\n//                       اختار اللغة\n//                     </Text>\n//                   )}\n//                 </View>\n//                 <View\n//                   style={{\n//                     alignSelf: \"center\",\n//                     position: \"absolute\",\n//                     top: 100\n//                   }}\n//                 >\n//                   <Button\n//                     style={{\n//                       width: 250,\n//                       borderRadius: 12,\n//                       height: 40,\n//                       backgroundColor: \"#4e9fd1\",\n//                       top: 0\n//                     }}\n//                     onPress={this.changetoEnglish}\n//                   >\n//                     <View\n//                       style={{\n//                         flex: 1,\n//                         alignSelf: \"center\",\n//                         alignItems: \"center\"\n//                       }}\n//                     >\n//                       <Text style={{ color: \"white\" }}>English</Text>\n//                     </View>\n//                   </Button>\n//                   <Button\n//                     style={{\n//                       width: 250,\n//                       borderRadius: 12,\n//                       height: 40,\n//                       backgroundColor: \"#4e9fd1\",\n//                       top: 14\n//                     }}\n//                     onPress={this.changetoArabic}\n//                   >\n//                     <View\n//                       style={{\n//                         flex: 1,\n//                         alignSelf: \"center\",\n//                         alignItems: \"center\"\n//                       }}\n//                     >\n//                       <Text\n//                         style={{\n//                           color: \"white\",\n\n//                           alignItems: \"center\"\n//                         }}\n//                       >\n//                         العربية\n//                       </Text>\n//                     </View>\n//                   </Button>\n//                 </View>\n//               </View>\n//             </Modal>\n//           </ScrollView>\n//         </LinearGradient>\n\n//         <View\n//           style={{\n//             flexDirection: \"row\",\n//             height: 50,\n//             alignSelf: \"center\",\n//             justifyContent: \"space-between\",\n//             width: \"100%\",\n//             position: \"absolute\",\n//             alignItems: \"flex-end\",\n//             bottom: 0,\n//             left: 0,\n//             backgroundColor: \"white\",\n//             paddingHorizontal: 12\n//           }}\n//         >\n//           <TouchableOpacity onPress={() => this.navigationSetup(1)}>\n//             <View>\n//               <View style={{ alignSelf: \"center\" }}>\n//                 <Ionicons name=\"md-apps\" size={28} color={\"#ccc\"} />\n//               </View>\n//               <Text\n//                 style={{ textAlign: \"center\", fontSize: 12, color: \"#ccc\" }}\n//               >\n//                 {this.state.lan == \"en\" ? \"Categories\" : \"فئات الخدمات\"}\n//               </Text>\n//             </View>\n//           </TouchableOpacity>\n//           <TouchableOpacity onPress={() => this.navigationSetup(2)}>\n//             <View>\n//               <View style={{ alignSelf: \"center\" }}>\n//                 <Image\n//                   resizeMode=\"contain\"\n//                   source={require(\"../assets/myOrder.png\")}\n//                   style={{ height: 29, width: 30 }}\n//                 />\n//               </View>\n//               <Text\n//                 style={{\n//                   textAlign: \"center\",\n//                   fontSize: 12,\n//                   color: \"#ccc\"\n//                 }}\n//               >\n//                 {this.state.lan == \"en\" ? \"My Orders\" : \"طلباتي\"}\n//               </Text>\n//             </View>\n//           </TouchableOpacity>\n//           <TouchableOpacity onPress={() => this.navigationSetup(3)}>\n//             <View>\n//               <View style={{ alignSelf: \"center\", flexDirection: \"row\" }}>\n//                 <Ionicons name=\"md-cart\" size={28} color={\"#ccc\"} />\n//                 {this.state.cartItem > 0 ? (\n//                   <Badge\n//                     danger\n//                     style={{ height: 20, width: 20, borderRadius: 10 }}\n//                   >\n//                     <View\n//                       style={{\n//                         left: 0,\n//                         right: 0,\n//                         bottom: 0,\n//                         top: 0,\n//                         position: \"absolute\"\n//                       }}\n//                     >\n//                       <Text\n//                         style={{\n//                           fontSize: 10,\n\n//                           justifyContent: \"center\"\n//                         }}\n//                       >\n//                         {this.state.cartItem}\n//                       </Text>\n//                     </View>\n//                   </Badge>\n//                 ) : (\n//                   <View></View>\n//                 )}\n//               </View>\n//               <Text\n//                 style={{ textAlign: \"center\", fontSize: 12, color: \"#ccc\" }}\n//               >\n//                 {this.state.lan == \"en\" ? \"My Cart\" : \"سلة الطلب خاصتي\"}\n//               </Text>\n//             </View>\n//           </TouchableOpacity>\n//           <View>\n//             <View style={{ alignSelf: \"center\" }}>\n//               <View style={{ flexDirection: \"row\" }}>\n//                 <Ionicons\n//                   name={\n//                     this.state.isLogin == true\n//                       ? \"ios-person\"\n//                       : \"ios-information-circle\"\n//                   }\n//                   size={28}\n//                   color={\"#0865b0\"}\n//                 />\n//                 {(this.state.user && this.state.user.name == \"\") ||\n//                 (this.state.user && this.state.user.name == null) ||\n//                 (this.state.user && this.state.user.email == \"\") ||\n//                 (this.state.user && this.state.user.email == null) ? (\n//                   <View\n//                     style={{\n//                       width: 4,\n//                       height: 4,\n//                       borderRadius: 2,\n//                       backgroundColor: \"red\"\n//                     }}\n//                   ></View>\n//                 ) : (\n//                   <View></View>\n//                 )}\n//               </View>\n//             </View>\n//             <Text\n//               style={{ textAlign: \"center\", fontSize: 12, color: \"#0865b0\" }}\n//             >\n//               {this.state.isLogin == true\n//                 ? this.state.lan == \"en\"\n//                   ? \"My Profile\"\n//                   : \"ملفي الشخصي\"\n//                 : this.state.lan == \"en\"\n//                 ? \"About\"\n//                 : \"المزيد\"}\n//             </Text>\n//           </View>\n//         </View>\n//       </View>\n//     );\n//   }\n// }\n\n// import React from \"react\";\n// import {\n//   View,\n//   Image,\n//   Platform,\n//   Dimensions,\n//   Modal,\n//   Alert,\n//   ImageBackground,\n//   TouchableOpacity,\n//   AsyncStorage,\n//   I18nManager\n// } from \"react-native\";\n// import {\n//   Container,\n//   Accordion,\n//   Toast,\n//   Title,\n//   Header,\n//   Content,\n//   Thumbnail,\n//   Button,\n//   Text,\n//   Badge,\n//   Left,\n//   Right,\n//   Footer\n// } from \"native-base\";\n// import * as StoreReview from \"expo-store-review\";\n// import { Ionicons } from \"@expo/vector-icons\";\n// import * as Updates from \"expo-updates\";\n// import * as Notifications from \"expo-notifications\";\n// import { LinearGradient } from \"expo-linear-gradient\";\n// import { NavigationEvents } from \"react-navigation\";\n// import * as Analytics from \"expo-firebase-analytics\";\n\n// export default class ProfileSecreen extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       isLogin: false,\n//       modalVisible: false,\n//       lan: \"en\",\n//       user: {},\n//       cartItem: 0,\n//       location: \"\"\n//     };\n//   }\n//   componentDidMount = async () => {\n//     const { navigation } = this.props;\n//     let user = await AsyncStorage.getItem(\"user\");\n//     if (user !== null) {\n//       this.setState({\n//         cartItem: navigation.getParam(\"cartItem\"),\n//         user: JSON.parse(user),\n//         isLogin: true,\n//         lan: navigation.getParam(\"lan\"),\n//         location: navigation.getParam(\"location\")\n//       });\n//     } else {\n//       this.setState({ lan: navigation.getParam(\"lan\") });\n//     }\n//   };\n//   logoutUser = async () => {\n//     await AsyncStorage.removeItem(\"user\");\n//     await AsyncStorage.removeItem(\"jobs\");\n//     await AsyncStorage.removeItem(\"address\");\n//     this.setState({ isLogin: false, cartItem: 0 });\n//   };\n//   authenticateUser = () => {\n//     this.props.navigation.navigate(\"Login\", { lan: this.state.lan });\n//   };\n//   displayLanguageModal = () => {\n//     this.setState({ modalVisible: true });\n//   };\n//   hideModal = () => {\n//     this.setState({ modalVisible: false });\n//   };\n//   likeForense = () => {\n//     if (this.state.lan === \"en\") {\n//       Alert.alert(\n//         \"Would you mind rating Wafarnalak?\",\n//         \"It wont take more than a minute and helps to promote our app. Thanks for your support!\",\n//         [\n//           { text: \"RATE IT NOW\", onPress: () => StoreReview.requestReview() },\n//           {\n//             text: \"REMIND ME LATER\",\n\n//             style: \"cancel\"\n//           },\n//           {\n//             text: \"NO, THANKS\",\n\n//             style: \"cancel\"\n//           }\n//         ],\n//         { cancelable: false }\n//       );\n//     } else {\n//       Alert.alert(\n//         \"هلا تفضلت بتقييم وفرنا لك ؟\",\n//         \"لن يستغرق الأمر اكثر من دقيقة والذي بدوره سيسهم في تحسين تطبيقنا، شكراً لدعمك\",\n//         [\n//           {\n//             text: \"ذكرني بوقت اخر\",\n\n//             style: \"cancel\"\n//           },\n//           {\n//             text: \"لا، شكراً\",\n\n//             style: \"cancel\"\n//           },\n//           { text: \"تقييم الآن\", onPress: () => StoreReview.requestReview() }\n//         ],\n//         { cancelable: false }\n//       );\n//     }\n//   };\n//   rateForense = () => {\n//     if (this.state.lan === \"en\") {\n//       Alert.alert(\n//         \"Do you like using Wafarnalak?\",\n//         \"\",\n//         [\n//           {\n//             text: \"Ask me later\"\n//           },\n//           {\n//             text: \"Not Really\",\n\n//             style: \"cancel\"\n//           },\n//           {\n//             text: \"Yes!\",\n//             onPress: () => this.likeForense()\n//           }\n//         ],\n//         { cancelable: false }\n//       );\n//     } else {\n//       Alert.alert(\n//         \"هل احببت استخدام وفرنا لك ؟\",\n//         \"\",\n//         [\n//           {\n//             text: \"ذكرني بوقت اخر\"\n//           },\n//           {\n//             text: \"ليس صحيحاً\",\n\n//             style: \"cancel\"\n//           },\n//           {\n//             text: \"نعم\",\n//             onPress: () => this.likeForense()\n//           }\n//         ],\n//         { cancelable: false }\n//       );\n//     }\n//   };\n//   navigationSetup = async option => {\n//     if (option == 1) {\n//       this.props.navigation.navigate(\"LandingSecreen\", { lan: this.state.lan });\n//     }\n//     if (option == 3) {\n//       if (this.state.cartItem > 0) {\n//         if (\n//           this.state.location == \"Riyadh\" ||\n//           this.state.location == \"Al-Kharj\"\n//         ) {\n//           this.props.navigation.navigate(\"MyCart\", { lan: this.state.lan });\n//           await Analytics.logEvent(\"Cart\", {\n//             name: \"Cart\",\n//             isPackage: false,\n//             screen: \"myProfileScreen\",\n//             purpose: \"checkout order from myProfile screen\"\n//           });\n//         } else {\n//           Toast.show({\n//             text:\n//               this.state.lan == \"en\"\n//                 ? \"Sorry, currently we are not delivering services in your city, soon we will be with you\"\n//                 : \"سلة الطلبات فارغة\",\n//             position: \"bottom\"\n//           });\n//         }\n//       } else {\n//         Toast.show({\n//           text:\n//             this.state.lan == \"en\" ? \"Your cart is empty\" : \"سلة الطلبات فارغة\",\n//           position: \"bottom\"\n//         });\n//       }\n//     }\n//     if (option == 2) {\n//       this.props.navigation.navigate(\"MyOrders\", {\n//         cartItem: this.state.cartItem,\n//         lan: this.state.lan\n//       });\n//     }\n//   };\n\n//   changetoEnglish = async () => {\n//     await AsyncStorage.setItem(\"lan\", \"en\");\n//     I18nManager.isRTL = false;\n//     I18nManager.forceRTL(false);\n//     await Updates.reloadAsync();\n//     //this.updateLanguage(1);\n//   };\n//   changetoArabic = async () => {\n//     await AsyncStorage.setItem(\"lan\", \"ar\");\n//     I18nManager.isRTL = true;\n//     I18nManager.forceRTL(true);\n//     await Updates.reloadAsync();\n//     //this.updateLanguage(2);\n//   };\n//   render() {\n//     return (\n//       <Container>\n//         <Header\n//           style={{\n//             marginTop: 0,\n//             borderBottomWidth: 2,\n//             borderBottomColor: \"#0866b0\",\n//             backgroundColor: \"#ffffff\",\n//             height: 60,\n//             justifyContent: \"center\"\n//           }}\n//         >\n//           <Left style={{ marginLeft: 10 }}></Left>\n//           <View\n//             style={{\n//               flex: 2,\n//               justifyContent: \"center\",\n//               alignItems: \"center\",\n//               position: Platform.OS === \"android\" ? \"absolute\" : \"relative\",\n//               alignSelf: \"center\"\n//             }}\n//           >\n//             <Title\n//               style={{\n//                 fontFamily: \"montserrat_semi_blod\",\n//                 color: \"#0866b0\",\n//                 fontSize: 18\n//               }}\n//             >\n//               {this.state.lan == \"en\" ? \"My Profile\" : \"ملفي الشخصي\"}\n//             </Title>\n//           </View>\n//           <Right />\n//         </Header>\n//         <Content>\n//           {\n//             <NavigationEvents\n//               onWillFocus={() => {\n//                 this.componentDidMount();\n//               }}\n//             />\n//           }\n//           <LinearGradient\n//             colors={[\"#0764af\", \"#6ea8cd\"]}\n//             start={[0.9, 0.2]}\n//             end={[0.1, 0.1]}\n//             style={{\n//               width: Dimensions.get(\"screen\").width,\n//               height: Dimensions.get(\"screen\").height - 80\n//             }}\n//           >\n//             <View>\n//               <ImageBackground\n//                 source={require(\"../assets/Profile-with-Stroke-min.png\")}\n//                 style={{\n//                   width: Dimensions.get(\"screen\").width - 60,\n//                   height: 210,\n//                   alignSelf: \"center\",\n//                   marginTop: 15\n//                 }}\n//                 resizeMode=\"contain\"\n//               >\n//                 {this.state.isLogin === true ? (\n//                   <View\n//                     style={{\n//                       position: \"absolute\",\n//                       right: 10,\n//                       top: Platform.OS === \"ios\" ? 10 : 22\n//                     }}\n//                   >\n//                     <Text style={{ color: \"white\" }}>\n//                       {this.state.user.name}\n//                     </Text>\n//                     <TouchableOpacity onPress={this.logoutUser}>\n//                       <View\n//                         style={{\n//                           backgroundColor: \"#6ea8cd\",\n//                           width: 60,\n//                           height: 16,\n//                           borderRadius: 5,\n//                           alignSelf: \"flex-end\"\n//                         }}\n//                       >\n//                         <Text\n//                           style={{\n//                             fontSize: 10,\n//                             alignSelf: \"center\",\n//                             paddingTop: Platform.OS === \"ios\" ? 1 : 0,\n//                             color: \"white\"\n//                           }}\n//                         >\n//                           {this.state.lan == \"en\" ? \"Log out\" : \"خروج\"}\n//                         </Text>\n//                       </View>\n//                     </TouchableOpacity>\n//                   </View>\n//                 ) : (\n//                   <View></View>\n//                 )}\n//               </ImageBackground>\n//             </View>\n//             <View\n//               style={{\n//                 backgroundColor: \"white\",\n//                 width: Dimensions.get(\"screen\").width - 64,\n//                 marginTop: 15,\n//                 borderRadius: 12,\n//                 alignSelf: \"center\"\n//               }}\n//             >\n//               {this.state.isLogin === true ? (\n//                 <TouchableOpacity\n//                   onPress={() =>\n//                     this.props.navigation.navigate(\"ProfileUpdate\", {\n//                       user: this.state.user,\n//                       lan: this.state.lan\n//                     })\n//                   }\n//                 >\n//                   <View>\n//                     <View\n//                       style={{\n//                         flexDirection: \"row\",\n//                         justifyContent: \"space-between\",\n//                         margin: 12,\n//                         backgroundColor: \"white\"\n//                       }}\n//                     >\n//                       <View style={{ flexDirection: \"row\" }}>\n//                         <Image\n//                           source={require(\"../assets/Profile-Icon/Profile-Icon-min.png\")}\n//                           style={{ width: 30, height: 30 }}\n//                           resizeMode=\"contain\"\n//                         />\n//                         <Text\n//                           style={{\n//                             paddingTop: 4,\n//                             marginLeft: 16,\n//                             color: \"#4a4b4c\"\n//                           }}\n//                         >\n//                           {this.state.lan == \"en\" ? \"Profile\" : \"ملفي الشخصي\"}\n//                         </Text>\n//                       </View>\n//                       <View style={{ paddingTop: 5 }}>\n//                         <Ionicons\n//                           name={\n//                             this.state.lan == \"en\"\n//                               ? \"chevron-forward-outline\"\n//                               : \"chevron-back-outline\"\n//                           }\n//                           size={24}\n//                           color={\"#6ea8cd\"}\n//                         />\n//                       </View>\n//                     </View>\n//                     <View\n//                       style={{\n//                         height: 1,\n//                         backgroundColor: \"lightgray\",\n//                         width: Dimensions.get(\"screen\").width - 64\n//                       }}\n//                     ></View>\n//                   </View>\n//                 </TouchableOpacity>\n//               ) : (\n//                 <View></View>\n//               )}\n//               <TouchableOpacity onPress={this.displayLanguageModal}>\n//                 <View\n//                   style={{\n//                     flexDirection: \"row\",\n//                     justifyContent: \"space-between\",\n//                     margin: 12,\n//                     backgroundColor: \"white\"\n//                   }}\n//                 >\n//                   <View style={{ flexDirection: \"row\" }}>\n//                     <Image\n//                       source={require(\"../assets/Profile-Icon/Change-Language-min.png\")}\n//                       style={{ width: 30, height: 30 }}\n//                       resizeMode=\"contain\"\n//                     />\n//                     <Text\n//                       style={{\n//                         paddingTop: 4,\n//                         marginLeft: 16,\n//                         color: \"#4a4b4c\"\n//                       }}\n//                     >\n//                       {this.state.lan == \"en\"\n//                         ? \"Change Language\"\n//                         : \"تغيير اللغة\"}\n//                     </Text>\n//                   </View>\n//                   <View style={{ paddingTop: 5 }}>\n//                     <Ionicons\n//                       name={\n//                         this.state.lan == \"en\"\n//                           ? \"chevron-forward-outline\"\n//                           : \"chevron-back-outline\"\n//                       }\n//                       size={24}\n//                       color={\"#6ea8cd\"}\n//                     />\n//                   </View>\n//                 </View>\n//               </TouchableOpacity>\n//               <View\n//                 style={{\n//                   height: 1,\n//                   backgroundColor: \"lightgray\",\n//                   width: Dimensions.get(\"screen\").width - 64\n//                 }}\n//               ></View>\n//               <TouchableOpacity\n//                 onPress={() =>\n//                   this.props.navigation.navigate(\"HelpScreen\", {\n//                     lan: this.state.lan\n//                   })\n//                 }\n//               >\n//                 <View\n//                   style={{\n//                     flexDirection: \"row\",\n//                     justifyContent: \"space-between\",\n//                     margin: 12,\n//                     backgroundColor: \"white\"\n//                   }}\n//                 >\n//                   <View style={{ flexDirection: \"row\" }}>\n//                     <Image\n//                       source={require(\"../assets/Profile-Icon/Help-min.png\")}\n//                       style={{ width: 30, height: 30 }}\n//                       resizeMode=\"contain\"\n//                     />\n//                     <Text\n//                       style={{\n//                         paddingTop: 4,\n//                         marginLeft: 20,\n//                         color: \"#4a4b4c\"\n//                       }}\n//                     >\n//                       {this.state.lan == \"en\" ? \"Help\" : \"مساعدة\"}\n//                     </Text>\n//                   </View>\n//                   <View style={{ paddingTop: 5 }}>\n//                     <Ionicons\n//                       name={\n//                         this.state.lan == \"en\"\n//                           ? \"chevron-forward-outline\"\n//                           : \"chevron-back-outline\"\n//                       }\n//                       size={24}\n//                       color={\"#6ea8cd\"}\n//                     />\n//                   </View>\n//                 </View>\n//               </TouchableOpacity>\n//               <View\n//                 style={{\n//                   height: 1,\n//                   backgroundColor: \"lightgray\",\n//                   width: Dimensions.get(\"screen\").width - 64\n//                 }}\n//               ></View>\n//               <TouchableOpacity\n//                 onPress={() =>\n//                   this.props.navigation.navigate(\"AboutScreen\", {\n//                     lan: this.state.lan\n//                   })\n//                 }\n//               >\n//                 <View\n//                   style={{\n//                     flexDirection: \"row\",\n//                     justifyContent: \"space-between\",\n//                     margin: 12,\n//                     backgroundColor: \"white\"\n//                   }}\n//                 >\n//                   <View style={{ flexDirection: \"row\" }}>\n//                     <Image\n//                       source={require(\"../assets/Profile-Icon/About-min.png\")}\n//                       style={{ width: 30, height: 30 }}\n//                       resizeMode=\"contain\"\n//                     />\n//                     <Text\n//                       style={{\n//                         paddingTop: 4,\n//                         marginLeft: 20,\n//                         color: \"#4a4b4c\"\n//                       }}\n//                     >\n//                       {this.state.lan == \"en\"\n//                         ? \"About Wafarnalak\"\n//                         : \"عن وفرنا لك\"}\n//                     </Text>\n//                   </View>\n//                   <View style={{ paddingTop: 5 }}>\n//                     <Ionicons\n//                       name={\n//                         this.state.lan == \"en\"\n//                           ? \"chevron-forward-outline\"\n//                           : \"chevron-back-outline\"\n//                       }\n//                       size={24}\n//                       color={\"#6ea8cd\"}\n//                     />\n//                   </View>\n//                 </View>\n//               </TouchableOpacity>\n//               <View\n//                 style={{\n//                   height: 1,\n//                   backgroundColor: \"lightgray\",\n//                   width: Dimensions.get(\"screen\").width - 64\n//                 }}\n//               ></View>\n//               <TouchableOpacity onPress={this.rateForense}>\n//                 <View\n//                   style={{\n//                     flexDirection: \"row\",\n//                     justifyContent: \"space-between\",\n//                     margin: 12,\n//                     backgroundColor: \"white\"\n//                   }}\n//                 >\n//                   <View style={{ flexDirection: \"row\" }}>\n//                     <Image\n//                       source={require(\"../assets/Profile-Icon/Rate-min.png\")}\n//                       style={{ width: 30, height: 30 }}\n//                       resizeMode=\"contain\"\n//                     />\n//                     <Text\n//                       style={{\n//                         paddingTop: 4,\n//                         marginLeft: 20,\n//                         color: \"#4a4b4c\"\n//                       }}\n//                     >\n//                       {this.state.lan == \"en\"\n//                         ? \"Rate Wafarnalak\"\n//                         : \"قيٌم وفرنا لك\"}\n//                     </Text>\n//                   </View>\n//                   <View style={{ paddingTop: 5 }}>\n//                     <Ionicons\n//                       name={\n//                         this.state.lan == \"en\"\n//                           ? \"chevron-forward-outline\"\n//                           : \"chevron-back-outline\"\n//                       }\n//                       size={24}\n//                       color={\"#6ea8cd\"}\n//                     />\n//                   </View>\n//                 </View>\n//               </TouchableOpacity>\n\n//               {this.state.isLogin === true ? (\n//                 <View>\n//                   <View\n//                     style={{\n//                       height: 1,\n//                       backgroundColor: \"lightgray\",\n//                       width: Dimensions.get(\"screen\").width - 64\n//                     }}\n//                   ></View>\n//                   <TouchableOpacity\n//                     onPress={() =>\n//                       this.props.navigation.navigate(\"MyOrdersSecreen\")\n//                     }\n//                   >\n//                     <TouchableOpacity\n//                       onPress={() =>\n//                         this.props.navigation.navigate(\"PointsScreen\", {\n//                           lan: this.state.lan\n//                         })\n//                       }\n//                     >\n//                       <View\n//                         style={{\n//                           flexDirection: \"row\",\n//                           justifyContent: \"space-between\",\n//                           margin: 12,\n//                           backgroundColor: \"white\"\n//                         }}\n//                       >\n//                         <View style={{ flexDirection: \"row\" }}>\n//                           <Image\n//                             source={require(\"../assets/Profile-Icon/Points-min.png\")}\n//                             style={{ width: 30, height: 30 }}\n//                             resizeMode=\"contain\"\n//                           />\n//                           <Text\n//                             style={{\n//                               paddingTop: 4,\n//                               marginLeft: 20,\n//                               color: \"#4a4b4c\"\n//                             }}\n//                           >\n//                             {this.state.lan == \"en\"\n//                               ? \"Wafarnalak Points\"\n//                               : \"نقاط وفرنا لك\"}\n//                           </Text>\n//                         </View>\n//                         <View style={{ paddingTop: 5 }}>\n//                           <Ionicons\n//                             name={\n//                               this.state.lan == \"en\"\n//                                 ? \"chevron-forward-outline\"\n//                                 : \"chevron-back-outline\"\n//                             }\n//                             size={24}\n//                             color={\"#6ea8cd\"}\n//                           />\n//                         </View>\n//                       </View>\n//                     </TouchableOpacity>\n//                   </TouchableOpacity>\n//                   <View\n//                     style={{\n//                       height: 1,\n//                       backgroundColor: \"lightgray\",\n//                       width: Dimensions.get(\"screen\").width - 64\n//                     }}\n//                   ></View>\n//                 </View>\n//               ) : (\n//                 <View></View>\n//               )}\n\n//               {this.state.isLogin === true ? (\n//                 <TouchableOpacity\n//                   onPress={() =>\n//                     this.props.navigation.navigate(\"ReferralScreen\", {\n//                       user: this.state.user,\n//                       lan: this.state.lan\n//                     })\n//                   }\n//                 >\n//                   <View\n//                     style={{\n//                       flexDirection: \"row\",\n//                       justifyContent: \"space-between\",\n//                       margin: 12,\n//                       backgroundColor: \"white\"\n//                     }}\n//                   >\n//                     <View style={{ flexDirection: \"row\" }}>\n//                       <Image\n//                         source={require(\"../assets/Profile-Icon/Referral-min.png\")}\n//                         style={{ width: 30, height: 30 }}\n//                         resizeMode=\"contain\"\n//                       />\n//                       <Text\n//                         style={{\n//                           paddingTop: 4,\n//                           marginLeft: 20,\n//                           color: \"#4a4b4c\"\n//                         }}\n//                       >\n//                         {this.state.lan == \"en\"\n//                           ? \"Wafarnalak Referral\"\n//                           : \"إحالة وفرنا لك (رمز الدعوة)\"}\n//                       </Text>\n//                     </View>\n//                     <View style={{ paddingTop: 5 }}>\n//                       <Ionicons\n//                         name={\n//                           this.state.lan == \"en\"\n//                             ? \"chevron-forward-outline\"\n//                             : \"chevron-back-outline\"\n//                         }\n//                         size={24}\n//                         color={\"#6ea8cd\"}\n//                       />\n//                     </View>\n//                   </View>\n//                 </TouchableOpacity>\n//               ) : (\n//                 <View></View>\n//               )}\n//             </View>\n//             {this.state.isLogin === false ? (\n//               <TouchableOpacity onPress={this.authenticateUser}>\n//                 <View\n//                   style={{\n//                     backgroundColor: \"#6ea8cd\",\n//                     borderRadius: 12,\n//                     width: Dimensions.get(\"screen\").width - 120,\n//                     alignSelf: \"center\",\n//                     marginTop: 15\n//                   }}\n//                 >\n//                   <Text\n//                     style={{ color: \"white\", margin: 12, alignSelf: \"center\" }}\n//                   >\n//                     {this.state.lan == \"en\" ? \"Sign In\" : \"دخول\"}\n//                   </Text>\n//                 </View>\n//               </TouchableOpacity>\n//             ) : (\n//               <View></View>\n//             )}\n//           </LinearGradient>\n//           <Modal\n//             animationType=\"slide\"\n//             transparent={true}\n//             visible={this.state.modalVisible}\n//           >\n//             <View\n//               style={{\n//                 marginTop: 220,\n//                 height: 255,\n//                 borderRadius: 20,\n//                 width: 350,\n//                 backgroundColor: \"#0764af\",\n//                 alignSelf: \"center\"\n//               }}\n//             >\n//               <View style={{ flex: 1, alignSelf: \"center\", marginTop: -24 }}>\n//                 <Thumbnail source={require(\"../assets/Icon2.png\")} />\n//               </View>\n//               <View style={{ position: \"absolute\", right: 6, top: 10 }}>\n//                 <Ionicons\n//                   onPress={this.hideModal}\n//                   name=\"ios-close-circle-outline\"\n//                   size={35}\n//                   color=\"red\"\n//                 />\n//               </View>\n//               <View\n//                 style={{ alignSelf: \"center\", position: \"absolute\", top: 50 }}\n//               >\n//                 {this.state.lan === \"en\" ? (\n//                   <Text\n//                     style={{ color: \"white\", fontSize: 20, fontWeight: \"bold\" }}\n//                   >\n//                     Select Language\n//                   </Text>\n//                 ) : (\n//                   <Text\n//                     style={{\n//                       fontFamily: \"montserrat_semi_blod\",\n//                       color: \"white\",\n//                       fontSize: 30\n//                     }}\n//                   >\n//                     اختار اللغة\n//                   </Text>\n//                 )}\n//               </View>\n//               <View\n//                 style={{ alignSelf: \"center\", position: \"absolute\", top: 100 }}\n//               >\n//                 <Button\n//                   style={{\n//                     width: 250,\n//                     borderRadius: 12,\n//                     height: 40,\n//                     backgroundColor: \"#4e9fd1\",\n//                     top: 0\n//                   }}\n//                   onPress={this.changetoEnglish}\n//                 >\n//                   <View\n//                     style={{\n//                       flex: 1,\n//                       alignSelf: \"center\",\n//                       alignItems: \"center\"\n//                     }}\n//                   >\n//                     <Text style={{ color: \"white\" }}>English</Text>\n//                   </View>\n//                 </Button>\n//                 <Button\n//                   style={{\n//                     width: 250,\n//                     borderRadius: 12,\n//                     height: 40,\n//                     backgroundColor: \"#4e9fd1\",\n//                     top: 14\n//                   }}\n//                   onPress={this.changetoArabic}\n//                 >\n//                   <View\n//                     style={{\n//                       flex: 1,\n//                       alignSelf: \"center\",\n//                       alignItems: \"center\"\n//                     }}\n//                   >\n//                     <Text\n//                       style={{\n//                         color: \"white\",\n\n//                         alignItems: \"center\"\n//                       }}\n//                     >\n//                       العربية\n//                     </Text>\n//                   </View>\n//                 </Button>\n//               </View>\n//             </View>\n//           </Modal>\n//         </Content>\n//         <Footer style={{ backgroundColor: \"white\" }}>\n//           <View\n//             style={{\n//               flexDirection: \"row\",\n//               flex: 1,\n//               alignSelf: \"center\",\n//               justifyContent: \"space-between\",\n//               margin: 12\n//             }}\n//           >\n//             <TouchableOpacity onPress={() => this.navigationSetup(1)}>\n//               <View>\n//                 <View style={{ alignSelf: \"center\" }}>\n//                   <Ionicons name=\"md-apps\" size={26} color={\"#ccc\"} />\n//                 </View>\n//                 <Text\n//                   style={{ textAlign: \"center\", fontSize: 12, color: \"#ccc\" }}\n//                 >\n//                   {this.state.lan == \"en\" ? \"Categories\" : \"فئات الخدمات\"}\n//                 </Text>\n//               </View>\n//             </TouchableOpacity>\n//             <TouchableOpacity onPress={() => this.navigationSetup(2)}>\n//               <View>\n//                 <View style={{ alignSelf: \"center\" }}>\n//                   <Ionicons name=\"ios-list-box\" size={26} color={\"#ccc\"} />\n//                 </View>\n//                 <Text\n//                   style={{\n//                     textAlign: \"center\",\n//                     fontSize: 12,\n//                     color: \"#ccc\"\n//                   }}\n//                 >\n//                   {this.state.lan == \"en\" ? \"My Orders\" : \"طلباتي\"}\n//                 </Text>\n//               </View>\n//             </TouchableOpacity>\n//             <TouchableOpacity onPress={() => this.navigationSetup(3)}>\n//               <View>\n//                 <View style={{ alignSelf: \"center\", flexDirection: \"row\" }}>\n//                   <Ionicons name=\"md-cart\" size={26} color={\"#ccc\"} />\n//                   {this.state.cartItem > 0 ? (\n//                     <Badge\n//                       danger\n//                       style={{ height: 20, width: 20, borderRadius: 10 }}\n//                     >\n//                       <View\n//                         style={{\n//                           left: 0,\n//                           right: 0,\n//                           bottom: 0,\n//                           top: 0,\n//                           position: \"absolute\"\n//                         }}\n//                       >\n//                         <Text\n//                           style={{\n//                             fontSize: 10,\n\n//                             justifyContent: \"center\"\n//                           }}\n//                         >\n//                           {this.state.cartItem}\n//                         </Text>\n//                       </View>\n//                     </Badge>\n//                   ) : (\n//                     <View></View>\n//                   )}\n//                 </View>\n//                 <Text\n//                   style={{ textAlign: \"center\", fontSize: 12, color: \"#ccc\" }}\n//                 >\n//                   {this.state.lan == \"en\" ? \"My Cart\" : \"سلة الطلب خاصتي\"}\n//                 </Text>\n//               </View>\n//             </TouchableOpacity>\n//             <View>\n//               <View style={{ alignSelf: \"center\" }}>\n//                 <View style={{ flexDirection: \"row\" }}>\n//                   <Ionicons\n//                     name={\n//                       this.state.isLogin == true\n//                         ? \"ios-person\"\n//                         : \"ios-information-circle\"\n//                     }\n//                     size={26}\n//                     color={\"#0865b0\"}\n//                   />\n//                   {(this.state.user && this.state.user.name == \"\") ||\n//                   (this.state.user && this.state.user.name == null) ||\n//                   (this.state.user && this.state.user.email == \"\") ||\n//                   (this.state.user && this.state.user.email == null) ? (\n//                     <View\n//                       style={{\n//                         width: 4,\n//                         height: 4,\n//                         borderRadius: 2,\n//                         backgroundColor: \"red\"\n//                       }}\n//                     ></View>\n//                   ) : (\n//                     <View></View>\n//                   )}\n//                 </View>\n//               </View>\n//               <Text\n//                 style={{ textAlign: \"center\", fontSize: 12, color: \"#0865b0\" }}\n//               >\n//                 {this.state.isLogin == true\n//                   ? this.state.lan == \"en\"\n//                     ? \"My Profile\"\n//                     : \"ملفي الشخصي\"\n//                   : this.state.lan == \"en\"\n//                   ? \"About\"\n//                   : \"المزيد\"}\n//               </Text>\n//             </View>\n//           </View>\n//         </Footer>\n//       </Container>\n//     );\n//   }\n// }\n\nimport React from \"react\";\nimport {\n  View,\n  Image,\n  Platform,\n  Dimensions,\n  Modal,\n  Alert,\n  ImageBackground,\n  TouchableOpacity,\n  AsyncStorage,\n  I18nManager,\n  ScrollView\n} from \"react-native\";\nimport {\n  Container,\n  Accordion,\n  Toast,\n  Title,\n  Header,\n  Content,\n  Thumbnail,\n  Button,\n  Text,\n  Badge,\n  Left,\n  Right,\n  Footer\n} from \"native-base\";\nimport * as StoreReview from \"expo-store-review\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport * as Updates from \"expo-updates\";\nimport * as Notifications from \"expo-notifications\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { NavigationEvents } from \"react-navigation\";\nimport * as Analytics from \"expo-firebase-analytics\";\n\nexport default class ProfileSecreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: false,\n      modalVisible: false,\n      lan: \"en\",\n      user: {},\n      cartItem: 0,\n      location: \"\"\n    };\n  }\n  componentDidMount = async () => {\n    const { navigation } = this.props;\n    let user = await AsyncStorage.getItem(\"user\");\n    if (user !== null) {\n      this.setState({\n        cartItem: navigation.getParam(\"cartItem\"),\n        user: JSON.parse(user),\n        isLogin: true,\n        lan: navigation.getParam(\"lan\"),\n        location: navigation.getParam(\"location\")\n      });\n    } else {\n      this.setState({ lan: navigation.getParam(\"lan\") });\n    }\n  };\n  logoutUser = async () => {\n    await AsyncStorage.removeItem(\"user\");\n    await AsyncStorage.removeItem(\"jobs\");\n    await AsyncStorage.removeItem(\"address\");\n    this.setState({ isLogin: false, cartItem: 0 });\n  };\n  authenticateUser = () => {\n    this.props.navigation.navigate(\"Login\", { lan: this.state.lan });\n  };\n  displayLanguageModal = () => {\n    this.setState({ modalVisible: true });\n  };\n  hideModal = () => {\n    this.setState({ modalVisible: false });\n  };\n  likeForense = () => {\n    if (this.state.lan === \"en\") {\n      Alert.alert(\n        \"Would you mind rating Wafarnalak?\",\n        \"It wont take more than a minute and helps to promote our app. Thanks for your support!\",\n        [\n          { text: \"RATE IT NOW\", onPress: () => StoreReview.requestReview() },\n          {\n            text: \"REMIND ME LATER\",\n\n            style: \"cancel\"\n          },\n          {\n            text: \"NO, THANKS\",\n\n            style: \"cancel\"\n          }\n        ],\n        { cancelable: false }\n      );\n    } else {\n      Alert.alert(\n        \"هلا تفضلت بتقييم وفرنا لك ؟\",\n        \"لن يستغرق الأمر اكثر من دقيقة والذي بدوره سيسهم في تحسين تطبيقنا، شكراً لدعمك\",\n        [\n          {\n            text: \"ذكرني بوقت اخر\",\n\n            style: \"cancel\"\n          },\n          {\n            text: \"لا، شكراً\",\n\n            style: \"cancel\"\n          },\n          { text: \"تقييم الآن\", onPress: () => StoreReview.requestReview() }\n        ],\n        { cancelable: false }\n      );\n    }\n  };\n  rateForense = () => {\n    if (this.state.lan === \"en\") {\n      Alert.alert(\n        \"Do you like using Wafarnalak?\",\n        \"\",\n        [\n          {\n            text: \"Ask me later\"\n          },\n          {\n            text: \"Not Really\",\n\n            style: \"cancel\"\n          },\n          {\n            text: \"Yes!\",\n            onPress: () => this.likeForense()\n          }\n        ],\n        { cancelable: false }\n      );\n    } else {\n      Alert.alert(\n        \"هل احببت استخدام وفرنا لك ؟\",\n        \"\",\n        [\n          {\n            text: \"ذكرني بوقت اخر\"\n          },\n          {\n            text: \"ليس صحيحاً\",\n\n            style: \"cancel\"\n          },\n          {\n            text: \"نعم\",\n            onPress: () => this.likeForense()\n          }\n        ],\n        { cancelable: false }\n      );\n    }\n  };\n  navigationSetup = async option => {\n    if (option == 1) {\n      this.props.navigation.navigate(\"LandingSecreen\", { lan: this.state.lan });\n    }\n    if (option == 3) {\n      if (this.state.cartItem > 0) {\n        if (\n          this.state.location == \"Riyadh\" ||\n          this.state.location == \"Al-Kharj\"\n        ) {\n          this.props.navigation.navigate(\"MyCart\", { lan: this.state.lan });\n          await Analytics.logEvent(\"Cart\", {\n            name: \"Cart\",\n            isPackage: false,\n            screen: \"myProfileScreen\",\n            purpose: \"checkout order from myProfile screen\"\n          });\n        } else {\n          Toast.show({\n            text:\n              this.state.lan == \"en\"\n                ? \"Sorry, currently we are not delivering services in your city, soon we will be with you\"\n                : \"سلة الطلبات فارغة\",\n            position: \"bottom\"\n          });\n        }\n      } else {\n        Toast.show({\n          text:\n            this.state.lan == \"en\" ? \"Your cart is empty\" : \"سلة الطلبات فارغة\",\n          position: \"bottom\"\n        });\n      }\n    }\n    if (option == 2) {\n      this.props.navigation.navigate(\"MyOrders\", {\n        cartItem: this.state.cartItem,\n        lan: this.state.lan\n      });\n    }\n  };\n\n  changetoEnglish = async () => {\n    await AsyncStorage.setItem(\"lan\", \"en\");\n    I18nManager.isRTL = false;\n    I18nManager.forceRTL(false);\n    await Updates.reloadAsync();\n    //this.updateLanguage(1);\n  };\n  changetoArabic = async () => {\n    await AsyncStorage.setItem(\"lan\", \"ar\");\n    I18nManager.isRTL = true;\n    I18nManager.forceRTL(true);\n    await Updates.reloadAsync();\n    //this.updateLanguage(2);\n  };\n  render() {\n    return (\n      <View style={{ flex: 1 }}>\n        <View\n          style={{\n            width: \"100%\",\n            borderBottomWidth: 2,\n            borderBottomColor: \"#0866b0\",\n            backgroundColor: \"#ffffff\",\n            height: 60,\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <View\n            style={{\n              flex: 2,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              position: Platform.OS === \"android\" ? \"absolute\" : \"relative\",\n              alignSelf: \"center\"\n            }}\n          >\n            <Text\n              style={{\n                fontFamily: \"montserrat_semi_blod\",\n                color: \"#0866b0\",\n                fontSize: 18\n              }}\n            >\n              {this.state.lan == \"en\" ? \"My Profile\" : \"ملفي الشخصي\"}\n            </Text>\n          </View>\n        </View>\n        {\n          <NavigationEvents\n            onWillFocus={() => {\n              this.componentDidMount();\n            }}\n          />\n        }\n        <View\n          style={{\n            width: Dimensions.get(\"screen\").width,\n            height: Dimensions.get(\"screen\").height - 100\n          }}\n        >\n          <ScrollView contentContainerStyle={{ flexGrow: 1 }}>\n            <LinearGradient\n              colors={[\"#0764af\", \"#6ea8cd\"]}\n              start={[0.9, 0.2]}\n              end={[0.1, 0.1]}\n              style={{\n                width: Dimensions.get(\"screen\").width,\n                height: Dimensions.get(\"screen\").height\n              }}\n            >\n              <ImageBackground\n                source={require(\"../assets/Profile-with-Stroke-min.png\")}\n                style={{\n                  width: Dimensions.get(\"screen\").width - 60,\n                  height: 210,\n                  alignSelf: \"center\",\n                  marginTop: 10\n                }}\n                resizeMode=\"contain\"\n              >\n                {this.state.isLogin === true ? (\n                  <View\n                    style={{\n                      position: \"absolute\",\n                      right: 10,\n                      top: Platform.OS === \"ios\" ? 10 : 22\n                    }}\n                  >\n                    <Text style={{ color: \"white\" }}>\n                      {this.state.user.name}\n                    </Text>\n                    <TouchableOpacity onPress={this.logoutUser}>\n                      <View\n                        style={{\n                          backgroundColor: \"#6ea8cd\",\n                          width: 60,\n                          height: 16,\n                          borderRadius: 5,\n                          alignSelf: \"flex-end\"\n                        }}\n                      >\n                        <Text\n                          style={{\n                            fontSize: 10,\n                            alignSelf: \"center\",\n                            paddingTop: Platform.OS === \"ios\" ? 1 : 0,\n                            color: \"white\"\n                          }}\n                        >\n                          {this.state.lan == \"en\" ? \"Log out\" : \"خروج\"}\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n                  </View>\n                ) : (\n                  <View></View>\n                )}\n              </ImageBackground>\n              <View\n                style={{\n                  backgroundColor: \"white\",\n                  width: Dimensions.get(\"screen\").width - 64,\n                  marginTop: 15,\n                  borderRadius: 12,\n                  alignSelf: \"center\"\n                }}\n              >\n                {this.state.isLogin === true ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      this.props.navigation.navigate(\"ProfileUpdate\", {\n                        user: this.state.user,\n                        lan: this.state.lan\n                      })\n                    }\n                  >\n                    <View>\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                          margin: 12,\n                          backgroundColor: \"white\"\n                        }}\n                      >\n                        <View style={{ flexDirection: \"row\" }}>\n                          <Image\n                            source={require(\"../assets/Profile-Icon/Profile-Icon-min.png\")}\n                            style={{ width: 30, height: 30 }}\n                            resizeMode=\"contain\"\n                          />\n                          <Text\n                            style={{\n                              paddingTop: 4,\n                              marginLeft: 16,\n                              color: \"#4a4b4c\"\n                            }}\n                          >\n                            {this.state.lan == \"en\" ? \"Profile\" : \"ملفي الشخصي\"}\n                          </Text>\n                        </View>\n                        <View style={{ paddingTop: 5 }}>\n                          <Ionicons\n                            name={\n                              this.state.lan == \"en\"\n                                ? \"chevron-forward-outline\"\n                                : \"chevron-back-outline\"\n                            }\n                            size={24}\n                            color={\"#6ea8cd\"}\n                          />\n                        </View>\n                      </View>\n                      <View\n                        style={{\n                          height: 1,\n                          backgroundColor: \"lightgray\",\n                          width: Dimensions.get(\"screen\").width - 64\n                        }}\n                      ></View>\n                    </View>\n                  </TouchableOpacity>\n                ) : (\n                  <View></View>\n                )}\n                <TouchableOpacity onPress={this.displayLanguageModal}>\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      margin: 12,\n                      backgroundColor: \"white\"\n                    }}\n                  >\n                    <View style={{ flexDirection: \"row\" }}>\n                      <Image\n                        source={require(\"../assets/Profile-Icon/Change-Language-min.png\")}\n                        style={{ width: 30, height: 30 }}\n                        resizeMode=\"contain\"\n                      />\n                      <Text\n                        style={{\n                          paddingTop: 4,\n                          marginLeft: 16,\n                          color: \"#4a4b4c\"\n                        }}\n                      >\n                        {this.state.lan == \"en\"\n                          ? \"Change Language\"\n                          : \"تغيير اللغة\"}\n                      </Text>\n                    </View>\n                    <View style={{ paddingTop: 5 }}>\n                      <Ionicons\n                        name={\n                          this.state.lan == \"en\"\n                            ? \"chevron-forward-outline\"\n                            : \"chevron-back-outline\"\n                        }\n                        size={24}\n                        color={\"#6ea8cd\"}\n                      />\n                    </View>\n                  </View>\n                </TouchableOpacity>\n                <View\n                  style={{\n                    height: 1,\n                    backgroundColor: \"lightgray\",\n                    width: Dimensions.get(\"screen\").width - 64\n                  }}\n                ></View>\n                <TouchableOpacity\n                  onPress={() =>\n                    this.props.navigation.navigate(\"HelpScreen\", {\n                      lan: this.state.lan\n                    })\n                  }\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      margin: 12,\n                      backgroundColor: \"white\"\n                    }}\n                  >\n                    <View style={{ flexDirection: \"row\" }}>\n                      <Image\n                        source={require(\"../assets/Profile-Icon/Help-min.png\")}\n                        style={{ width: 30, height: 30 }}\n                        resizeMode=\"contain\"\n                      />\n                      <Text\n                        style={{\n                          paddingTop: 4,\n                          marginLeft: 20,\n                          color: \"#4a4b4c\"\n                        }}\n                      >\n                        {this.state.lan == \"en\" ? \"Help\" : \"مساعدة\"}\n                      </Text>\n                    </View>\n                    <View style={{ paddingTop: 5 }}>\n                      <Ionicons\n                        name={\n                          this.state.lan == \"en\"\n                            ? \"chevron-forward-outline\"\n                            : \"chevron-back-outline\"\n                        }\n                        size={24}\n                        color={\"#6ea8cd\"}\n                      />\n                    </View>\n                  </View>\n                </TouchableOpacity>\n                <View\n                  style={{\n                    height: 1,\n                    backgroundColor: \"lightgray\",\n                    width: Dimensions.get(\"screen\").width - 64\n                  }}\n                ></View>\n                <TouchableOpacity\n                  onPress={() =>\n                    this.props.navigation.navigate(\"AboutScreen\", {\n                      lan: this.state.lan\n                    })\n                  }\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      margin: 12,\n                      backgroundColor: \"white\"\n                    }}\n                  >\n                    <View style={{ flexDirection: \"row\" }}>\n                      <Image\n                        source={require(\"../assets/Profile-Icon/About-min.png\")}\n                        style={{ width: 30, height: 30 }}\n                        resizeMode=\"contain\"\n                      />\n                      <Text\n                        style={{\n                          paddingTop: 4,\n                          marginLeft: 20,\n                          color: \"#4a4b4c\"\n                        }}\n                      >\n                        {this.state.lan == \"en\"\n                          ? \"About Wafarnalak\"\n                          : \"عن وفرنا لك\"}\n                      </Text>\n                    </View>\n                    <View style={{ paddingTop: 5 }}>\n                      <Ionicons\n                        name={\n                          this.state.lan == \"en\"\n                            ? \"chevron-forward-outline\"\n                            : \"chevron-back-outline\"\n                        }\n                        size={24}\n                        color={\"#6ea8cd\"}\n                      />\n                    </View>\n                  </View>\n                </TouchableOpacity>\n                <View\n                  style={{\n                    height: 1,\n                    backgroundColor: \"lightgray\",\n                    width: Dimensions.get(\"screen\").width - 64\n                  }}\n                ></View>\n                <TouchableOpacity onPress={this.rateForense}>\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      margin: 12,\n                      backgroundColor: \"white\"\n                    }}\n                  >\n                    <View style={{ flexDirection: \"row\" }}>\n                      <Image\n                        source={require(\"../assets/Profile-Icon/Rate-min.png\")}\n                        style={{ width: 30, height: 30 }}\n                        resizeMode=\"contain\"\n                      />\n                      <Text\n                        style={{\n                          paddingTop: 4,\n                          marginLeft: 20,\n                          color: \"#4a4b4c\"\n                        }}\n                      >\n                        {this.state.lan == \"en\"\n                          ? \"Rate Wafarnalak\"\n                          : \"قيٌم وفرنا لك\"}\n                      </Text>\n                    </View>\n                    <View style={{ paddingTop: 5 }}>\n                      <Ionicons\n                        name={\n                          this.state.lan == \"en\"\n                            ? \"chevron-forward-outline\"\n                            : \"chevron-back-outline\"\n                        }\n                        size={24}\n                        color={\"#6ea8cd\"}\n                      />\n                    </View>\n                  </View>\n                </TouchableOpacity>\n\n                {this.state.isLogin === true ? (\n                  <View>\n                    <View\n                      style={{\n                        height: 1,\n                        backgroundColor: \"lightgray\",\n                        width: Dimensions.get(\"screen\").width - 64\n                      }}\n                    ></View>\n                    <TouchableOpacity\n                      onPress={() =>\n                        this.props.navigation.navigate(\"MyOrdersSecreen\")\n                      }\n                    >\n                      <TouchableOpacity\n                        onPress={() =>\n                          this.props.navigation.navigate(\"PointsScreen\", {\n                            lan: this.state.lan\n                          })\n                        }\n                      >\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            justifyContent: \"space-between\",\n                            margin: 12,\n                            backgroundColor: \"white\"\n                          }}\n                        >\n                          <View style={{ flexDirection: \"row\" }}>\n                            <Image\n                              source={require(\"../assets/Profile-Icon/Points-min.png\")}\n                              style={{ width: 30, height: 30 }}\n                              resizeMode=\"contain\"\n                            />\n                            <Text\n                              style={{\n                                paddingTop: 4,\n                                marginLeft: 20,\n                                color: \"#4a4b4c\"\n                              }}\n                            >\n                              {this.state.lan == \"en\"\n                                ? \"Wafarnalak Points\"\n                                : \"نقاط وفرنا لك\"}\n                            </Text>\n                          </View>\n                          <View style={{ paddingTop: 5 }}>\n                            <Ionicons\n                              name={\n                                this.state.lan == \"en\"\n                                  ? \"chevron-forward-outline\"\n                                  : \"chevron-back-outline\"\n                              }\n                              size={24}\n                              color={\"#6ea8cd\"}\n                            />\n                          </View>\n                        </View>\n                      </TouchableOpacity>\n                    </TouchableOpacity>\n                    <View\n                      style={{\n                        height: 1,\n                        backgroundColor: \"lightgray\",\n                        width: Dimensions.get(\"screen\").width - 64\n                      }}\n                    ></View>\n                  </View>\n                ) : (\n                  <View></View>\n                )}\n\n                {this.state.isLogin === true ? (\n                  <TouchableOpacity\n                    onPress={() =>\n                      this.props.navigation.navigate(\"ReferralScreen\", {\n                        user: this.state.user,\n                        lan: this.state.lan\n                      })\n                    }\n                  >\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        margin: 12,\n                        backgroundColor: \"white\"\n                      }}\n                    >\n                      <View style={{ flexDirection: \"row\" }}>\n                        <Image\n                          source={require(\"../assets/Profile-Icon/Referral-min.png\")}\n                          style={{ width: 30, height: 30 }}\n                          resizeMode=\"contain\"\n                        />\n                        <Text\n                          style={{\n                            paddingTop: 4,\n                            marginLeft: 20,\n                            color: \"#4a4b4c\"\n                          }}\n                        >\n                          {this.state.lan == \"en\"\n                            ? \"Wafarnalak Referral\"\n                            : \"إحالة وفرنا لك (رمز الدعوة)\"}\n                        </Text>\n                      </View>\n                      <View style={{ paddingTop: 5 }}>\n                        <Ionicons\n                          name={\n                            this.state.lan == \"en\"\n                              ? \"chevron-forward-outline\"\n                              : \"chevron-back-outline\"\n                          }\n                          size={24}\n                          color={\"#6ea8cd\"}\n                        />\n                      </View>\n                    </View>\n                  </TouchableOpacity>\n                ) : (\n                  <View></View>\n                )}\n              </View>\n              {this.state.isLogin === false ? (\n                <TouchableOpacity onPress={this.authenticateUser}>\n                  <View\n                    style={{\n                      backgroundColor: \"#6ea8cd\",\n                      borderRadius: 12,\n                      width: Dimensions.get(\"screen\").width - 120,\n                      alignSelf: \"center\",\n                      marginTop: 15\n                    }}\n                  >\n                    <Text\n                      style={{\n                        color: \"white\",\n                        margin: 12,\n                        alignSelf: \"center\"\n                      }}\n                    >\n                      {this.state.lan == \"en\" ? \"Sign In\" : \"دخول\"}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              ) : (\n                <View></View>\n              )}\n              <Modal\n                animationType=\"slide\"\n                transparent={true}\n                visible={this.state.modalVisible}\n              >\n                <View\n                  style={{\n                    marginTop: 220,\n                    height: 255,\n                    borderRadius: 20,\n                    width: 350,\n                    backgroundColor: \"#0764af\",\n                    alignSelf: \"center\"\n                  }}\n                >\n                  <View\n                    style={{ flex: 1, alignSelf: \"center\", marginTop: -24 }}\n                  >\n                    <Thumbnail source={require(\"../assets/Icon2.png\")} />\n                  </View>\n                  <View style={{ position: \"absolute\", right: 6, top: 10 }}>\n                    <Ionicons\n                      onPress={this.hideModal}\n                      name=\"ios-close-circle-outline\"\n                      size={35}\n                      color=\"red\"\n                    />\n                  </View>\n                  <View\n                    style={{\n                      alignSelf: \"center\",\n                      position: \"absolute\",\n                      top: 50\n                    }}\n                  >\n                    {this.state.lan === \"en\" ? (\n                      <Text\n                        style={{\n                          color: \"white\",\n                          fontSize: 20,\n                          fontWeight: \"bold\"\n                        }}\n                      >\n                        Select Language\n                      </Text>\n                    ) : (\n                      <Text\n                        style={{\n                          fontFamily: \"montserrat_semi_blod\",\n                          color: \"white\",\n                          fontSize: 30\n                        }}\n                      >\n                        اختار اللغة\n                      </Text>\n                    )}\n                  </View>\n                  <View\n                    style={{\n                      alignSelf: \"center\",\n                      position: \"absolute\",\n                      top: 100\n                    }}\n                  >\n                    <Button\n                      style={{\n                        width: 250,\n                        borderRadius: 12,\n                        height: 40,\n                        backgroundColor: \"#4e9fd1\",\n                        top: 0\n                      }}\n                      onPress={this.changetoEnglish}\n                    >\n                      <View\n                        style={{\n                          flex: 1,\n                          alignSelf: \"center\",\n                          alignItems: \"center\"\n                        }}\n                      >\n                        <Text style={{ color: \"white\" }}>English</Text>\n                      </View>\n                    </Button>\n                    <Button\n                      style={{\n                        width: 250,\n                        borderRadius: 12,\n                        height: 40,\n                        backgroundColor: \"#4e9fd1\",\n                        top: 14\n                      }}\n                      onPress={this.changetoArabic}\n                    >\n                      <View\n                        style={{\n                          flex: 1,\n                          alignSelf: \"center\",\n                          alignItems: \"center\"\n                        }}\n                      >\n                        <Text\n                          style={{\n                            color: \"white\",\n\n                            alignItems: \"center\"\n                          }}\n                        >\n                          العربية\n                        </Text>\n                      </View>\n                    </Button>\n                  </View>\n                </View>\n              </Modal>\n            </LinearGradient>\n          </ScrollView>\n        </View>\n        <View\n          style={{\n            flexDirection: \"row\",\n            height: 50,\n            alignSelf: \"center\",\n            justifyContent: \"space-between\",\n            width: \"100%\",\n            position: \"absolute\",\n            alignItems: \"flex-end\",\n            bottom: 0,\n            left: 0,\n            backgroundColor: \"white\",\n            paddingHorizontal: 12\n          }}\n        >\n          <TouchableOpacity onPress={() => this.navigationSetup(1)}>\n            <View>\n              <View style={{ alignSelf: \"center\" }}>\n                <Ionicons name=\"md-apps\" size={28} color={\"#ccc\"} />\n              </View>\n              <Text\n                style={{ textAlign: \"center\", fontSize: 12, color: \"#ccc\" }}\n              >\n                {this.state.lan == \"en\" ? \"Categories\" : \"فئات الخدمات\"}\n              </Text>\n            </View>\n          </TouchableOpacity>\n          <TouchableOpacity onPress={() => this.navigationSetup(2)}>\n            <View>\n              <View style={{ alignSelf: \"center\" }}>\n                <Image\n                  resizeMode=\"contain\"\n                  source={require(\"../assets/myOrder.png\")}\n                  style={{ height: 29, width: 30 }}\n                />\n              </View>\n              <Text\n                style={{\n                  textAlign: \"center\",\n                  fontSize: 12,\n                  color: \"#ccc\"\n                }}\n              >\n                {this.state.lan == \"en\" ? \"My Orders\" : \"طلباتي\"}\n              </Text>\n            </View>\n          </TouchableOpacity>\n          <TouchableOpacity onPress={() => this.navigationSetup(3)}>\n            <View>\n              <View style={{ alignSelf: \"center\", flexDirection: \"row\" }}>\n                <Ionicons name=\"md-cart\" size={28} color={\"#ccc\"} />\n                {this.state.cartItem > 0 ? (\n                  <Badge\n                    danger\n                    style={{ height: 20, width: 20, borderRadius: 10 }}\n                  >\n                    <View\n                      style={{\n                        left: 0,\n                        right: 0,\n                        bottom: 0,\n                        top: 0,\n                        position: \"absolute\"\n                      }}\n                    >\n                      <Text\n                        style={{\n                          fontSize: 10,\n\n                          justifyContent: \"center\"\n                        }}\n                      >\n                        {this.state.cartItem}\n                      </Text>\n                    </View>\n                  </Badge>\n                ) : (\n                  <View></View>\n                )}\n              </View>\n              <Text\n                style={{ textAlign: \"center\", fontSize: 12, color: \"#ccc\" }}\n              >\n                {this.state.lan == \"en\" ? \"My Cart\" : \"سلة الطلب خاصتي\"}\n              </Text>\n            </View>\n          </TouchableOpacity>\n          <View>\n            <View style={{ alignSelf: \"center\" }}>\n              <View style={{ flexDirection: \"row\" }}>\n                <Ionicons\n                  name={\n                    this.state.isLogin == true\n                      ? \"ios-person\"\n                      : \"ios-information-circle\"\n                  }\n                  size={28}\n                  color={\"#0865b0\"}\n                />\n                {(this.state.user && this.state.user.name == \"\") ||\n                (this.state.user && this.state.user.name == null) ||\n                (this.state.user && this.state.user.email == \"\") ||\n                (this.state.user && this.state.user.email == null) ? (\n                  <View\n                    style={{\n                      width: 4,\n                      height: 4,\n                      borderRadius: 2,\n                      backgroundColor: \"red\"\n                    }}\n                  ></View>\n                ) : (\n                  <View></View>\n                )}\n              </View>\n            </View>\n            <Text\n              style={{ textAlign: \"center\", fontSize: 12, color: \"#0865b0\" }}\n            >\n              {this.state.isLogin == true\n                ? this.state.lan == \"en\"\n                  ? \"My Profile\"\n                  : \"ملفي الشخصي\"\n                : this.state.lan == \"en\"\n                ? \"About\"\n                : \"المزيد\"}\n            </Text>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}