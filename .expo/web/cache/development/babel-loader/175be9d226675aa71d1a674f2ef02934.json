{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sx/Documents/React Native/Foren Tech/consumer_latest/screens/loginscreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as Analytics from \"expo-firebase-analytics\";\nimport * as Permissions from \"expo-permissions\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Body, Button, Container, Content, Icon, Input, Item, Text, Thumbnail, Title, Toast } from \"native-base\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport * as Updates from \"expo-updates\";\nimport * as Notifications from \"expo-notifications\";\nimport React from \"react\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nvar persianNumbers = [/۰/g, /۱/g, /۲/g, /۳/g, /۴/g, /۵/g, /۶/g, /۷/g, /۸/g, /۹/g];\nvar arabicNumbers = [/٠/g, /١/g, /٢/g, /٣/g, /٤/g, /٥/g, /٦/g, /٧/g, /٨/g, /٩/g];\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidMount = function () {\n      _this.registerForPushNotificationAsync();\n\n      var navigation = _this.props.navigation;\n      console.log(lan);\n\n      if (navigation.getParam(\"lan\") == undefined) {\n        var lan = \"en\";\n      } else {\n        var lan = navigation.getParam(\"lan\");\n      }\n\n      _this.setState({\n        lan: lan\n      });\n    };\n\n    _this.registerForPushNotificationAsync = function _callee() {\n      var _await$Permissions$ge, existingStatus, finalStatus, _await$Permissions$as, status, token;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n            case 2:\n              _await$Permissions$ge = _context.sent;\n              existingStatus = _await$Permissions$ge.status;\n              finalStatus = existingStatus;\n\n              if (!(existingStatus !== \"granted\")) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.NOTIFICATIONS));\n\n            case 8:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n              finalStatus = status;\n\n            case 11:\n              if (!(finalStatus !== \"granted\")) {\n                _context.next = 13;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 13:\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n            case 15:\n              token = _context.sent;\n              console.log(token.data, \"< this.state.token\");\n\n              _this.setState({\n                token: token.data\n              });\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.verifyReferral = function () {\n      if (_this.state.referralCode !== \"\") {\n        fetch(\"http://ec2-13-234-48-248.ap-south-1.compute.amazonaws.com/wf/V1.2/verify_customer_login_otp\", {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            otpid: _this.state.otpid,\n            otpentered: _this.state.referralCode\n          })\n        }).then(function (response) {\n          return response.json();\n        }).then(function (responseJson) {\n          if (responseJson.error == false) {\n            _this.saveUserInformation(responseJson);\n          } else {\n            Toast.show({\n              text: responseJson.message,\n              position: \"bottom\",\n              duration: 3000\n            });\n          }\n\n          _this.setState({\n            loading: false\n          });\n        }).catch(function (error) {});\n      } else {\n        Toast.show({\n          text: _this.state.lan === \"en\" ? \"Please enter referral code, if any?\" : \"يرجى ادخال رمز الدعوة، اذا موجود؟\",\n          position: \"bottom\"\n        });\n      }\n    };\n\n    _this.saveUserInformation = function _callee2(user) {\n      var userObj;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"save user info > \", user);\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Analytics.setUserProperties(_defineProperty({}, \"userId\", user.customerid.toString())));\n\n            case 3:\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(Analytics.setUserProperty(\"email\", user.email));\n\n            case 5:\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(Analytics.setUserProperty(\"userMobile\", user.mobile.toString()));\n\n            case 7:\n              _context2.prev = 7;\n              _context2.next = 10;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"user\", JSON.stringify(user)));\n\n            case 10:\n              _context2.next = 14;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](7);\n\n            case 14:\n              if (_this.state.referralModalVisible == true) {\n                _this.setState({\n                  referralModalVisible: false\n                });\n              }\n\n              _this.setState({\n                loading: false,\n                user: user,\n                referralModalVisible: false\n              });\n\n              userObj = _this.props.navigation.getParam(\"user\");\n              console.log(\"Obj\");\n              console.log(user);\n\n              if (_this.props.navigation.getParam(\"goToHelp\") == true) {\n                _this.props.navigation.navigate(\"Chat\", {\n                  user: user,\n                  noGoBackLogin: true\n                });\n\n                console.log(\"True\");\n              } else {\n                _this.props.navigation.goBack();\n\n                console.log(\"False\");\n                console.log(_this.props.goBack);\n              }\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[7, 12]], Promise);\n    };\n\n    _this.hideReferralModal = function () {\n      _this.saveUserInformation(_this.state.user);\n    };\n\n    _this.loginUser = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(_this.state.mobile !== \"\" && _this.state.mobile.charAt(0) == 0 && _this.state.mobile.charAt(1) == 5 && _this.state.mobile.length == 10)) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(Analytics.logEvent(\"Login\", {\n                name: \"Login\",\n                screen: \"loginScreen\",\n                purpose: \"loggin in\",\n                login_number: _this.state.mobile.toString()\n              }));\n\n            case 3:\n              fetch(\"http://ec2-13-234-48-248.ap-south-1.compute.amazonaws.com/wf/V1.2/customer_login\", {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  mobile: _this.state.mobile,\n                  customerdeviceid: _this.state.token\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (responseJson) {\n                if (responseJson.error === false) {\n                  _this.setState({\n                    fisttime: responseJson.firsttime,\n                    user: responseJson,\n                    referralModalVisible: true,\n                    otpid: responseJson.otpid,\n                    loading: false\n                  });\n                } else {\n                  Toast.show({\n                    text: responseJson.message,\n                    position: \"bottom\"\n                  });\n\n                  _this.setState({\n                    loading: false\n                  });\n                }\n              }).catch(function (error) {\n                _this.setState({\n                  loading: false\n                });\n              });\n              _context3.next = 7;\n              break;\n\n            case 6:\n              Toast.show({\n                text: _this.state.lan === \"en\" ? \"Please enter your valid mobile number!\" : \"يرجى إدخال رقم الجوال بشكل صحيح\",\n                position: \"bottom\"\n              });\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.openChat = function () {\n      Linking.openURL(\"https://wa.me/+966577311430\");\n    };\n\n    _this.state = {\n      mobile: \"\",\n      otp: \"\",\n      token: \"\",\n      loading: false,\n      lan: \"en\",\n      referralCode: \"\",\n      user: {},\n      referralModalVisible: false,\n      otpid: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          backgroundColor: \"#0866b0\",\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 7\n        }\n      }, React.createElement(Spinner, {\n        visible: this.state.loading,\n        textContent: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          alignSelf: \"center\",\n          marginTop: 45,\n          marginLeft: 7,\n          marginRight: 7\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 9\n        }\n      }, this.state.lan == \"en\" ? React.createElement(Image, {\n        style: {\n          width: Dimensions.get(\"screen\").width - 8,\n          height: 278,\n          alignSelf: \"center\"\n        },\n        resizeMode: \"contain\",\n        source: require(\"../assets/login-screen-icons/comb-banner.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 13\n        }\n      }) : React.createElement(Image, {\n        style: {\n          width: Dimensions.get(\"screen\").width - 8,\n          height: 278,\n          alignSelf: \"center\"\n        },\n        resizeMode: \"contain\",\n        source: require(\"../assets/login-screen-icons/comb-banner-ar.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: {\n          borderColor: \"#9fc7db\",\n          backgroundColor: \"#9fc7db\",\n          width: Dimensions.get(\"screen\").width,\n          height: 83\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 11\n        }\n      }, this.state.lan == \"en\" ? React.createElement(Image, {\n        source: require(\"../assets/login-screen-icons/welcome-logo.png\"),\n        style: {\n          width: 190,\n          height: 70,\n          alignSelf: \"center\"\n        },\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 15\n        }\n      }) : React.createElement(Image, {\n        source: require(\"../assets/login-screen-icons/Wellcome-Logo-min_ar.png\"),\n        style: {\n          width: 190,\n          height: 70,\n          alignSelf: \"center\"\n        },\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 15\n        }\n      }))), React.createElement(View, {\n        style: {\n          marginTop: 50,\n          width: Dimensions.get(\"screen\").width - 40,\n          height: 170,\n          backgroundColor: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: \"row\",\n          marginTop: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          marginTop: 15,\n          marginLeft: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/login-screen-icons/Mobile.png\"),\n        style: {\n          width: 30,\n          height: 30\n        },\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 15\n        }\n      })), React.createElement(Input, {\n        style: {\n          textAlign: this.state.lan == \"en\" ? \"left\" : \"right\",\n          backgroundColor: \"white\",\n          paddingTop: 24\n        },\n        placeholder: \"05XXXXXXXX\",\n        placeholderTextColor: \"lightgray\",\n        keyboardType: \"phone-pad\",\n        returnKeyType: \"done\",\n        maxLength: 10,\n        onChangeText: function onChangeText(phone) {\n          if (typeof phone === \"string\") {\n            for (var i = 0; i < 10; i++) {\n              phone = phone.replace(arabicNumbers[i], i);\n            }\n          }\n\n          _this2.setState({\n            mobile: phone.replace(/[^0-9]/g, \"\")\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: {\n          marginLeft: 14,\n          width: Dimensions.get(\"screen\").width - 120,\n          borderWidth: 0.5,\n          borderColor: \"#6ea8cd\",\n          backgroundColor: \"#6ea8cd\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          marginLeft: 14,\n          width: Dimensions.get(\"screen\").width - 120,\n          borderWidth: 0.5,\n          borderColor: \"#6ea8cd\",\n          backgroundColor: \"#6ea8cd\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          position: \"absolute\",\n          right: -15,\n          width: 46,\n          top: -5,\n          height: 245,\n          backgroundColor: \"#0866b0\",\n          transform: [{\n            rotate: \"6deg\"\n          }]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 12,\n          color: \"lightgray\",\n          alignSelf: \"center\",\n          marginTop: 12\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1006,\n          columnNumber: 13\n        }\n      }, this.state.lan == \"en\" ? \"Please Enter Your Mobile Number Here\" : \"يرجى إدخال رقم جوالك\")), React.createElement(TouchableWithoutFeedback, {\n        onPress: this.loginUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          position: \"absolute\",\n          right: 0,\n          bottom: 60\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 13\n        }\n      }, this.state.lan == \"en\" ? React.createElement(Image, {\n        source: require(\"../assets/login-screen-icons/Proceed-Button.png\"),\n        style: {\n          width: 60,\n          height: 60\n        },\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 17\n        }\n      }) : React.createElement(Image, {\n        source: require(\"../assets/login-screen-icons/Proceed-Icon-min_ar.png\"),\n        style: {\n          width: 60,\n          height: 60\n        },\n        resizeMode: \"contain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 17\n        }\n      })))), React.createElement(Modal, {\n        animationType: \"slide\",\n        transparent: true,\n        visible: this.state.referralModalVisible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          marginTop: 150,\n          alignSelf: \"center\",\n          height: 235,\n          borderRadius: 20,\n          width: 330,\n          backgroundColor: \"#283a97\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          alignSelf: \"center\",\n          marginTop: -24\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 13\n        }\n      }, React.createElement(Thumbnail, {\n        source: require(\"../assets/Icon2.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1053,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: {\n          position: \"absolute\",\n          right: 6,\n          top: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1055,\n          columnNumber: 13\n        }\n      }, React.createElement(Ionicons, {\n        onPress: function onPress() {\n          return _this2.setState({\n            referralModalVisible: false\n          });\n        },\n        name: \"ios-close-circle-outline\",\n        size: 30,\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1056,\n          columnNumber: 15\n        }\n      })), React.createElement(View, {\n        style: {\n          alignSelf: \"center\",\n          position: \"absolute\",\n          top: 70\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 13\n        }\n      }, this.state.lan === \"en\" ? React.createElement(Text, {\n        style: {\n          color: \"white\",\n          fontSize: 12,\n          alignSelf: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1067,\n          columnNumber: 17\n        }\n      }, \"Please enter the 4 digit OTP code.\") : React.createElement(Text, {\n        style: {\n          fontFamily: \"montserrat_arabic_regular\",\n          color: \"white\",\n          fontSize: 12,\n          alignSelf: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077,\n          columnNumber: 17\n        }\n      }, \"\\u0623\\u062F\\u062E\\u0644 \\u0627\\u0644\\u0631\\u0645\\u0632 4 \\u0623\\u0631\\u0642\\u0627\\u0645 \\u0627\\u0644\\u0645\\u0631\\u0633\\u0644 \\u0644\\u062C\\u0648\\u0627\\u0644\\u0643\"), React.createElement(Input, {\n        style: {\n          width: 160,\n          textAlign: \"center\",\n          height: 30,\n          backgroundColor: \"white\",\n          borderRadius: 2,\n          marginTop: 10,\n          alignSelf: \"center\"\n        },\n        keyboardType: \"default\",\n        maxLength: 4,\n        returnKeyType: \"done\",\n        onChangeText: function onChangeText(ref) {\n          if (typeof ref === \"string\") {\n            for (var i = 0; i < 10; i++) {\n              ref = ref.replace(arabicNumbers[i], i);\n            }\n          }\n\n          _this2.setState({\n            referralCode: ref\n          });\n        },\n        placeholderTextColor: \"#cdd0d4\",\n        placeholder: this.state.lan === \"en\" ? \"XXXX\" : \"XXXX\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1089,\n          columnNumber: 15\n        }\n      }), React.createElement(Button, {\n        onPress: this.verifyReferral,\n        style: {\n          borderRadius: 15,\n          height: 32,\n          backgroundColor: \"#6ea8cd\",\n          top: 15,\n          alignSelf: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 17\n        }\n      }, this.state.lan === \"en\" ? React.createElement(Text, {\n        style: {\n          color: \"white\",\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1126,\n          columnNumber: 21\n        }\n      }, \"Login\") : React.createElement(Text, {\n        style: {\n          fontFamily: \"montserrat_arabic_regular\",\n          color: \"white\",\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1130,\n          columnNumber: 21\n        }\n      }, \" \", \"\\u062A\\u0633\\u0644\\u064A\\u0645\", \" \"))), this.state.lan === \"en\" ? React.createElement(Text, {\n        style: {\n          fontSize: 10,\n          color: \"white\",\n          marginTop: 25,\n          flexWrap: \"wrap\",\n          flex: 1,\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144,\n          columnNumber: 17\n        }\n      }) : React.createElement(Text, {\n        style: {\n          fontSize: 10,\n          color: \"white\",\n          marginTop: 25,\n          flexWrap: \"wrap\",\n          flex: 1,\n          fontFamily: \"montserrat_arabic_regular\",\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1157,\n          columnNumber: 17\n        }\n      })))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };","map":{"version":3,"sources":["/Users/sx/Documents/React Native/Foren Tech/consumer_latest/screens/loginscreen.js"],"names":["Analytics","Permissions","AsyncStorage","Body","Button","Container","Content","Icon","Input","Item","Text","Thumbnail","Title","Toast","Ionicons","Updates","Notifications","React","Spinner","persianNumbers","arabicNumbers","LoginScreen","props","componentDidMount","registerForPushNotificationAsync","navigation","console","log","lan","getParam","undefined","setState","getAsync","NOTIFICATIONS","existingStatus","status","finalStatus","askAsync","getExpoPushTokenAsync","token","data","verifyReferral","state","referralCode","fetch","method","headers","Accept","body","JSON","stringify","otpid","otpentered","then","response","json","responseJson","error","saveUserInformation","show","text","message","position","duration","loading","catch","user","setUserProperties","customerid","toString","setUserProperty","email","mobile","setItem","referralModalVisible","userObj","navigate","noGoBackLogin","goBack","hideReferralModal","loginUser","charAt","length","logEvent","name","screen","purpose","login_number","customerdeviceid","fisttime","firsttime","openChat","Linking","openURL","otp","backgroundColor","flex","alignSelf","marginTop","marginLeft","marginRight","width","Dimensions","get","height","require","borderColor","flexDirection","textAlign","paddingTop","phone","i","replace","borderWidth","right","top","transform","rotate","fontSize","color","bottom","borderRadius","fontFamily","ref","flexWrap","Component"],"mappings":"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","sourcesContent":["// import * as Analytics from \"expo-firebase-analytics\";\n// import * as Permissions from \"expo-permissions\";\n\n// import {\n//   AsyncStorage,\n//   Dimensions,\n//   Image,\n//   Linking,\n//   Modal,\n//   TouchableOpacity,\n//   TouchableWithoutFeedback,\n//   View\n// } from \"react-native\";\n// import {\n//   Body,\n//   Button,\n//   Container,\n//   Content,\n//   Icon,\n//   Input,\n//   Item,\n//   Text,\n//   Thumbnail,\n//   Title,\n//   Toast\n// } from \"native-base\";\n\n// import { Ionicons } from \"@expo/vector-icons\";\n// import * as Updates from \"expo-updates\";\n// import * as Notifications from \"expo-notifications\";\n// import React from \"react\";\n// import Spinner from \"react-native-loading-spinner-overlay\";\n\n// let persianNumbers = [\n//   /۰/g,\n//   /۱/g,\n//   /۲/g,\n//   /۳/g,\n//   /۴/g,\n//   /۵/g,\n//   /۶/g,\n//   /۷/g,\n//   /۸/g,\n//   /۹/g\n// ];\n// let arabicNumbers = [\n//   /٠/g,\n//   /١/g,\n//   /٢/g,\n//   /٣/g,\n//   /٤/g,\n//   /٥/g,\n//   /٦/g,\n//   /٧/g,\n//   /٨/g,\n//   /٩/g\n// ];\n// // let arabicNumbers = [\n// //   /0/g,\n// //   /1/g,\n// //   /2/g,\n// //   /3/g,\n// //   /4/g,\n// //   /5/g,\n// //   /6/g,\n// //   /7/g,\n// //   /8/g,\n// //   /9/g\n// // ];\n// export default class LoginScreen extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       mobile: \"\",\n//       otp: \"\",\n//       token: \"\",\n//       loading: false,\n//       lan: \"en\",\n//       referralCode: \"\",\n//       user: {},\n//       referralModalVisible: false,\n//       otpid: \"\"\n//     };\n//   }\n//   componentDidMount = () => {\n//     this.registerForPushNotificationAsync();\n//     const { navigation } = this.props;\n//     let lan = navigation.getParam(\"lan\");\n//     this.setState({ lan: lan });\n//   };\n//   registerForPushNotificationAsync = async () => {\n//     const { status: existingStatus } = await Permissions.getAsync(\n//       Permissions.NOTIFICATIONS\n//     );\n\n//     let finalStatus = existingStatus;\n\n//     if (existingStatus !== \"granted\") {\n//       const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n//       finalStatus = status;\n//     }\n//     if (finalStatus !== \"granted\") {\n//       return;\n//     }\n//     let token = await Notifications.getExpoPushTokenAsync();\n//     this.setState({ token: token });\n//   };\n//   verifyReferral = () => {\n//     if (this.state.referralCode !== \"\") {\n//       fetch(\n//         \"http://ec2-13-234-48-248.ap-south-1.compute.amazonaws.com/wf/V1.2/verify_customer_login_otp\",\n//         {\n//           method: \"POST\",\n//           headers: {\n//             Accept: \"application/json\",\n//             \"Content-Type\": \"application/json\"\n//           },\n//           body: JSON.stringify({\n//             otpid: this.state.otpid,\n//             otpentered: this.state.referralCode\n//           })\n//         }\n//       )\n//         .then(response => response.json())\n//         .then(responseJson => {\n//           if (responseJson.error == false) {\n//             this.saveUserInformation(responseJson);\n//             // Toast.show({\n//             //   text: responseJson.message,\n//             //   position: \"bottom\",\n//             //   duration: 3000\n//             // });\n//           } else {\n//             Toast.show({\n//               text: responseJson.message,\n//               position: \"bottom\",\n//               duration: 3000\n//             });\n//           }\n\n//           this.setState({ loading: false });\n//         })\n//         .catch(error => {});\n//     } else {\n//       Toast.show({\n//         text:\n//           this.state.lan === \"en\"\n//             ? \"Please enter referral code, if any?\"\n//             : \"يرجى ادخال رمز الدعوة، اذا موجود؟\",\n//         position: \"bottom\"\n//       });\n//     }\n//   };\n//   saveUserInformation = async user => {\n//     console.log(\"save user info > \", user);\n//     await Analytics.setUserProperties({\n//       [\"userId\"]: user.customerid.toString()\n//     });\n//     await Analytics.setUserProperty(\"email\", user.email);\n//     await Analytics.setUserProperty(\"userMobile\", user.mobile.toString());\n//     try {\n//       await AsyncStorage.setItem(\"user\", JSON.stringify(user));\n//     } catch (error) {}\n//     if (this.state.referralModalVisible == true) {\n//       this.setState({ referralModalVisible: false });\n//     }\n//     this.setState({ loading: false, user: user, referralModalVisible: false });\n//     this.props.navigation.goBack();\n//   };\n//   hideReferralModal = () => {\n//     this.saveUserInformation(this.state.user);\n//   };\n//   loginUser = async () => {\n//     if (\n//       this.state.mobile !== \"\" &&\n//       this.state.mobile.charAt(0) == 0 &&\n//       this.state.mobile.charAt(1) == 5 &&\n//       this.state.mobile.length == 10\n//     ) {\n//       await Analytics.logEvent(\"Login\", {\n//         name: \"Login\",\n//         screen: \"loginScreen\",\n//         purpose: \"loggin in\",\n//         login_number: this.state.mobile.toString()\n//       });\n//       fetch(\n//         \"http://ec2-13-234-48-248.ap-south-1.compute.amazonaws.com/wf/V1.2/customer_login\",\n//         {\n//           method: \"POST\",\n//           headers: {\n//             Accept: \"application/json\",\n//             \"Content-Type\": \"application/json\"\n//           },\n//           body: JSON.stringify({\n//             mobile: this.state.mobile,\n//             customerdeviceid: this.state.token\n//           })\n//         }\n//       )\n//         .then(response => response.json())\n//         .then(responseJson => {\n//           if (responseJson.error === false) {\n//             this.setState({\n//               fisttime: responseJson.firsttime,\n//               user: responseJson,\n//               // referralModalVisible: responseJson.firsttime == 1 ? true : false,\n//               referralModalVisible: true,\n//               otpid: responseJson.otpid,\n//               loading: false\n//             });\n//           } else {\n//             Toast.show({\n//               text: responseJson.message,\n//               position: \"bottom\"\n//             });\n//             this.setState({ loading: false });\n//           }\n//         })\n//         .catch(error => {\n//           this.setState({ loading: false });\n//         });\n//     } else {\n//       Toast.show({\n//         text:\n//           this.state.lan === \"en\"\n//             ? \"Please enter your valid mobile number!\"\n//             : \"يرجى إدخال رقم الجوال بشكل صحيح\",\n//         position: \"bottom\"\n//       });\n//     }\n//   };\n//   openChat = () => {\n//     Linking.openURL(\"https://wa.me/+966577311430\");\n//   };\n//   render() {\n//     return (\n//       <Container style={{ backgroundColor: \"#0866b0\" }}>\n//         <Content>\n//           <Spinner visible={this.state.loading} textContent={\"\"} />\n//           <View\n//             style={{\n//               alignSelf: \"center\",\n//               marginTop: 45,\n//               marginLeft: 7,\n//               marginRight: 7\n//             }}\n//           >\n//             {this.state.lan == \"en\" ? (\n//               <Image\n//                 style={{\n//                   width: Dimensions.get(\"screen\").width - 8,\n//                   height: 278,\n//                   alignSelf: \"center\"\n//                 }}\n//                 resizeMode=\"contain\"\n//                 source={require(\"../assets/login-screen-icons/comb-banner.png\")}\n//               />\n//             ) : (\n//               <Image\n//                 style={{\n//                   width: Dimensions.get(\"screen\").width - 8,\n//                   height: 278,\n//                   alignSelf: \"center\"\n//                 }}\n//                 resizeMode=\"contain\"\n//                 source={require(\"../assets/login-screen-icons/comb-banner-ar.png\")}\n//               />\n//             )}\n\n//             <View\n//               style={{\n//                 borderColor: \"#9fc7db\",\n//                 backgroundColor: \"#9fc7db\",\n//                 width: Dimensions.get(\"screen\").width,\n//                 height: 83\n//               }}\n//             >\n//               {this.state.lan == \"en\" ? (\n//                 <Image\n//                   source={require(\"../assets/login-screen-icons/welcome-logo.png\")}\n//                   style={{ width: 190, height: 70, alignSelf: \"center\" }}\n//                   resizeMode=\"contain\"\n//                 />\n//               ) : (\n//                 <Image\n//                   source={require(\"../assets/login-screen-icons/Wellcome-Logo-min_ar.png\")}\n//                   style={{ width: 190, height: 70, alignSelf: \"center\" }}\n//                   resizeMode=\"contain\"\n//                 />\n//               )}\n//             </View>\n//           </View>\n\n//           <View\n//             style={{\n//               marginTop: 50,\n//               width: Dimensions.get(\"screen\").width - 40,\n//               height: 170,\n//               backgroundColor: \"white\"\n//             }}\n//           >\n//             <View style={{ flexDirection: \"row\", marginTop: 30 }}>\n//               <View style={{ marginTop: 15, marginLeft: 8 }}>\n//                 <Image\n//                   source={require(\"../assets/login-screen-icons/Mobile.png\")}\n//                   style={{ width: 30, height: 30 }}\n//                   resizeMode=\"contain\"\n//                 />\n//               </View>\n//               <Input\n//                 style={{\n//                   textAlign: this.state.lan == \"en\" ? \"left\" : \"right\",\n//                   backgroundColor: \"white\",\n//                   paddingTop: 24\n//                 }}\n//                 placeholder=\"05XXXXXXXX\"\n//                 placeholderTextColor=\"lightgray\"\n//                 keyboardType=\"phone-pad\"\n//                 returnKeyType=\"done\"\n//                 maxLength={10}\n//                 onChangeText={phone => {\n//                   // fixNumbers = phone => {\n//                   if (typeof phone === \"string\") {\n//                     for (var i = 0; i < 10; i++) {\n//                       phone = phone.replace(arabicNumbers[i], i);\n//                     }\n//                   }\n//                   // return phone;\n//                   this.setState({ mobile: phone.replace(/[^0-9]/g, \"\") });\n//                   // };\n//                 }}\n//               />\n//             </View>\n\n//             <View\n//               style={{\n//                 marginLeft: 14,\n//                 width: Dimensions.get(\"screen\").width - 120,\n//                 borderWidth: 0.5,\n//                 borderColor: \"#6ea8cd\",\n//                 backgroundColor: \"#6ea8cd\"\n//               }}\n//             ></View>\n\n//             {/* <View style={{ flexDirection: \"row\", marginTop: 15 }}>\n//               <View style={{ marginTop: 15, marginLeft: 8 }}>\n//                 <Image\n//                   source={require(\"../assets/login-screen-icons/OTP.png\")}\n//                   style={{ width: 30, height: 30 }}\n//                   resizeMode=\"contain\"\n//                 />\n//               </View>\n//               <Input\n//                 style={{\n//                   textAlign: this.state.lan == \"en\" ? \"left\" : \"right\",\n//                   backgroundColor: \"white\",\n//                   paddingTop: 24\n//                 }}\n//                 placeholder={this.state.lan == \"en\" ? \"Enter OTP\" : \"الكود\"}\n//                 placeholderTextColor=\"lightgray\"\n//                 keyboardType=\"phone-pad\"\n//                 returnKeyType=\"done\"\n//                 maxLength={4}\n//                 onChangeText={otp => {\n//                   this.setState({ otp: otp.replace(/[^0-9]/g, \"\") });\n//                 }}\n//               />\n//             </View> */}\n//             <View\n//               style={{\n//                 marginLeft: 14,\n//                 width: Dimensions.get(\"screen\").width - 120,\n//                 borderWidth: 0.5,\n//                 borderColor: \"#6ea8cd\",\n//                 backgroundColor: \"#6ea8cd\"\n//               }}\n//             ></View>\n//             {/* <View\n//               style={{ marginLeft: 14, flexDirection: \"row\", marginTop: 50 }}\n//             >\n//               <Text style={{ color: \"lightgray\", paddingTop: 6 }}>\n//                 {this.state.lan == \"en\"\n//                   ? \"Did'nt Received OTP?\"\n//                   : \"لم استلم الكود؟\"}\n//               </Text>\n//               <TouchableOpacity onPress={this.openChat}>\n//                 <Image\n//                   source={require(\"../assets/login-screen-icons/Call.png\")}\n//                   style={{ width: 30, height: 30, marginLeft: 4 }}\n//                   resizeMode=\"contain\"\n//                 />\n//               </TouchableOpacity>\n//             </View> */}\n//             <View\n//               style={{\n//                 position: \"absolute\",\n//                 right: -15,\n//                 width: 46,\n//                 top: -5,\n//                 height: 245,\n//                 backgroundColor: \"#0866b0\",\n//                 transform: [{ rotate: \"6deg\" }]\n//               }}\n//             ></View>\n//             <View>\n//               <Text\n//                 style={{\n//                   fontSize: 12,\n//                   color: \"lightgray\",\n//                   alignSelf: \"center\",\n//                   marginTop: 12\n//                 }}\n//               >\n//                 {this.state.lan == \"en\"\n//                   ? \"Please Enter Your Mobile Number\"\n//                   : \"يرجى إدخال رقم جوالك\"}\n//               </Text>\n//             </View>\n//             <TouchableWithoutFeedback onPress={this.loginUser}>\n//               <View style={{ position: \"absolute\", right: 0, bottom: 60 }}>\n//                 {this.state.lan == \"en\" ? (\n//                   <Image\n//                     source={require(\"../assets/login-screen-icons/Proceed-Button.png\")}\n//                     style={{ width: 60, height: 60 }}\n//                     resizeMode=\"contain\"\n//                   />\n//                 ) : (\n//                   <Image\n//                     source={require(\"../assets/login-screen-icons/Proceed-Icon-min_ar.png\")}\n//                     style={{ width: 60, height: 60 }}\n//                     resizeMode=\"contain\"\n//                   />\n//                 )}\n//               </View>\n//             </TouchableWithoutFeedback>\n//           </View>\n//           <Modal\n//             animationType=\"slide\"\n//             transparent={true}\n//             visible={this.state.referralModalVisible}\n//           >\n//             <View\n//               style={{\n//                 marginTop: 150,\n//                 alignSelf: \"center\",\n//                 height: 235,\n//                 borderRadius: 20,\n//                 width: 330,\n//                 backgroundColor: \"#283a97\"\n//               }}\n//             >\n//               <View style={{ flex: 1, alignSelf: \"center\", marginTop: -24 }}>\n//                 <Thumbnail source={require(\"../assets/Icon2.png\")} />\n//               </View>\n//               <View style={{ position: \"absolute\", right: 6, top: 8 }}>\n//                 <Ionicons\n//                   onPress={() => this.setState({ referralModalVisible: false })}\n//                   name=\"ios-close-circle-outline\"\n//                   size={30}\n//                   color=\"red\"\n//                 />\n//               </View>\n//               <View\n//                 style={{ alignSelf: \"center\", position: \"absolute\", top: 70 }}\n//               >\n//                 {this.state.lan === \"en\" ? (\n//                   <Text\n//                     style={{\n//                       color: \"white\",\n//                       fontSize: 12,\n//                       alignSelf: \"center\"\n//                     }}\n//                   >\n//                     Please enter the 4 digit OTP code.\n//                   </Text>\n//                 ) : (\n//                   <Text\n//                     style={{\n//                       fontFamily: \"montserrat_arabic_regular\",\n//                       color: \"white\",\n//                       fontSize: 12,\n//                       alignSelf: \"center\"\n//                     }}\n//                   >\n//                     أدخل الرمز 4 أرقام المرسل لجوالك\n//                   </Text>\n//                 )}\n\n//                 <Input\n//                   style={{\n//                     width: 160,\n//                     textAlign: \"center\",\n//                     height: 30,\n//                     backgroundColor: \"white\",\n//                     borderRadius: 2,\n//                     marginTop: 10,\n//                     alignSelf: \"center\"\n//                   }}\n//                   keyboardType=\"default\"\n//                   maxLength={4}\n//                   returnKeyType=\"done\"\n//                   onChangeText={ref => {\n//                     if (typeof ref === \"string\") {\n//                       for (var i = 0; i < 10; i++) {\n//                         ref = ref.replace(arabicNumbers[i], i);\n//                       }\n//                     }\n//                     this.setState({ referralCode: ref });\n//                   }}\n//                   placeholderTextColor=\"#cdd0d4\"\n//                   // placeholder={this.state.lan === \"en\" ? \"Code\" : \"رمز\"}\n//                   placeholder={this.state.lan === \"en\" ? \"XXXX\" : \"XXXX\"}\n//                 />\n//                 <Button\n//                   onPress={this.verifyReferral}\n//                   style={{\n//                     borderRadius: 15,\n//                     height: 32,\n//                     backgroundColor: \"#6ea8cd\",\n//                     top: 15,\n//                     alignSelf: \"center\"\n//                   }}\n//                 >\n//                   <View>\n//                     {this.state.lan === \"en\" ? (\n//                       <Text style={{ color: \"white\", textAlign: \"center\" }}>\n//                         Login\n//                       </Text>\n//                     ) : (\n//                       <Text\n//                         style={{\n//                           fontFamily: \"montserrat_arabic_regular\",\n//                           color: \"white\",\n//                           textAlign: \"center\"\n//                         }}\n//                       >\n//                         {\" \"}\n//                         تسليم{\" \"}\n//                       </Text>\n//                     )}\n//                   </View>\n//                 </Button>\n//                 {this.state.lan === \"en\" ? (\n//                   <Text\n//                     style={{\n//                       fontSize: 10,\n//                       color: \"white\",\n//                       marginTop: 25,\n//                       flexWrap: \"wrap\",\n//                       flex: 1,\n//                       textAlign: \"center\"\n//                     }}\n//                   >\n//                     {/* To proceed without a referral code, close the pop-up */}\n//                   </Text>\n//                 ) : (\n//                   <Text\n//                     style={{\n//                       fontSize: 10,\n//                       color: \"white\",\n//                       marginTop: 25,\n//                       flexWrap: \"wrap\",\n//                       flex: 1,\n//                       fontFamily: \"montserrat_arabic_regular\",\n//                       textAlign: \"center\"\n//                     }}\n//                   >\n//                     {/* للإستمرار بدون رمز الدعوة، اغلق الشاشه المنبثقة */}\n//                   </Text>\n//                 )}\n//               </View>\n//             </View>\n//           </Modal>\n//         </Content>\n//       </Container>\n//     );\n//   }\n// }\n\nimport * as Analytics from \"expo-firebase-analytics\";\nimport * as Permissions from \"expo-permissions\";\n\nimport {\n  AsyncStorage,\n  Dimensions,\n  Image,\n  Linking,\n  Modal,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  View,\n} from \"react-native\";\nimport {\n  Body,\n  Button,\n  Container,\n  Content,\n  Icon,\n  Input,\n  Item,\n  Text,\n  Thumbnail,\n  Title,\n  Toast,\n} from \"native-base\";\n\nimport { Ionicons } from \"@expo/vector-icons\";\nimport * as Updates from \"expo-updates\";\nimport * as Notifications from \"expo-notifications\";\nimport React from \"react\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\n\nlet persianNumbers = [\n  /۰/g,\n  /۱/g,\n  /۲/g,\n  /۳/g,\n  /۴/g,\n  /۵/g,\n  /۶/g,\n  /۷/g,\n  /۸/g,\n  /۹/g,\n];\nlet arabicNumbers = [\n  /٠/g,\n  /١/g,\n  /٢/g,\n  /٣/g,\n  /٤/g,\n  /٥/g,\n  /٦/g,\n  /٧/g,\n  /٨/g,\n  /٩/g,\n];\n// let arabicNumbers = [\n//   /0/g,\n//   /1/g,\n//   /2/g,\n//   /3/g,\n//   /4/g,\n//   /5/g,\n//   /6/g,\n//   /7/g,\n//   /8/g,\n//   /9/g\n// ];\nexport default class LoginScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: \"\",\n      otp: \"\",\n      token: \"\",\n      loading: false,\n      lan: \"en\",\n      referralCode: \"\",\n      user: {},\n      referralModalVisible: false,\n      otpid: \"\",\n    };\n  }\n  componentDidMount = () => {\n    this.registerForPushNotificationAsync();\n    const { navigation } = this.props;\n    //let lan = navigation.getParam(\"lan\");\n    console.log(lan);\n    if (navigation.getParam(\"lan\") == undefined) {\n      var lan = \"en\";\n    } else {\n      var lan = navigation.getParam(\"lan\");\n    }\n    this.setState({ lan: lan });\n  };\n  registerForPushNotificationAsync = async () => {\n    const { status: existingStatus } = await Permissions.getAsync(\n      Permissions.NOTIFICATIONS\n    );\n\n    let finalStatus = existingStatus;\n\n    if (existingStatus !== \"granted\") {\n      const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n      finalStatus = status;\n    }\n    if (finalStatus !== \"granted\") {\n      return;\n    }\n\n    let token = await Notifications.getExpoPushTokenAsync();\n    console.log(token.data, \"< this.state.token\");\n    this.setState({ token: token.data });\n  };\n  verifyReferral = () => {\n    if (this.state.referralCode !== \"\") {\n      fetch(\n        \"http://ec2-13-234-48-248.ap-south-1.compute.amazonaws.com/wf/V1.2/verify_customer_login_otp\",\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            otpid: this.state.otpid,\n            otpentered: this.state.referralCode,\n          }),\n        }\n      )\n        .then((response) => response.json())\n        .then((responseJson) => {\n          if (responseJson.error == false) {\n            this.saveUserInformation(responseJson);\n            // Toast.show({\n            //   text: responseJson.message,\n            //   position: \"bottom\",\n            //   duration: 3000\n            // });\n          } else {\n            Toast.show({\n              text: responseJson.message,\n              position: \"bottom\",\n              duration: 3000,\n            });\n          }\n\n          this.setState({ loading: false });\n        })\n        .catch((error) => {});\n    } else {\n      Toast.show({\n        text:\n          this.state.lan === \"en\"\n            ? \"Please enter referral code, if any?\"\n            : \"يرجى ادخال رمز الدعوة، اذا موجود؟\",\n        position: \"bottom\",\n      });\n    }\n  };\n  saveUserInformation = async (user) => {\n    console.log(\"save user info > \", user);\n    await Analytics.setUserProperties({\n      [\"userId\"]: user.customerid.toString(),\n    });\n    await Analytics.setUserProperty(\"email\", user.email);\n    await Analytics.setUserProperty(\"userMobile\", user.mobile.toString());\n    try {\n      await AsyncStorage.setItem(\"user\", JSON.stringify(user));\n    } catch (error) {}\n    if (this.state.referralModalVisible == true) {\n      this.setState({ referralModalVisible: false });\n    }\n    this.setState({ loading: false, user: user, referralModalVisible: false });\n\n    let userObj = this.props.navigation.getParam(\"user\");\n    console.log(\"Obj\");\n    console.log(user);\n    if (this.props.navigation.getParam(\"goToHelp\") == true) {\n      this.props.navigation.navigate(\"Chat\", {\n        user,\n        noGoBackLogin: true,\n      });\n      console.log(\"True\");\n    } else {\n      this.props.navigation.goBack();\n      console.log(\"False\");\n      console.log(this.props.goBack);\n    }\n  };\n  hideReferralModal = () => {\n    this.saveUserInformation(this.state.user);\n  };\n  loginUser = async () => {\n    if (\n      this.state.mobile !== \"\" &&\n      this.state.mobile.charAt(0) == 0 &&\n      this.state.mobile.charAt(1) == 5 &&\n      this.state.mobile.length == 10\n    ) {\n      await Analytics.logEvent(\"Login\", {\n        name: \"Login\",\n        screen: \"loginScreen\",\n        purpose: \"loggin in\",\n        login_number: this.state.mobile.toString(),\n      });\n      fetch(\n        \"http://ec2-13-234-48-248.ap-south-1.compute.amazonaws.com/wf/V1.2/customer_login\",\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            mobile: this.state.mobile,\n            customerdeviceid: this.state.token,\n          }),\n        }\n      )\n        .then((response) => response.json())\n        .then((responseJson) => {\n          if (responseJson.error === false) {\n            this.setState({\n              fisttime: responseJson.firsttime,\n              user: responseJson,\n              // referralModalVisible: responseJson.firsttime == 1 ? true : false,\n              referralModalVisible: true,\n              otpid: responseJson.otpid,\n              loading: false,\n            });\n          } else {\n            Toast.show({\n              text: responseJson.message,\n              position: \"bottom\",\n            });\n            this.setState({ loading: false });\n          }\n        })\n        .catch((error) => {\n          this.setState({ loading: false });\n        });\n    } else {\n      Toast.show({\n        text:\n          this.state.lan === \"en\"\n            ? \"Please enter your valid mobile number!\"\n            : \"يرجى إدخال رقم الجوال بشكل صحيح\",\n        position: \"bottom\",\n      });\n    }\n  };\n  openChat = () => {\n    Linking.openURL(\"https://wa.me/+966577311430\");\n  };\n  render() {\n    return (\n      <View style={{ backgroundColor: \"#0866b0\", flex: 1 }}>\n        <Spinner visible={this.state.loading} textContent={\"\"} />\n        <View\n          style={{\n            alignSelf: \"center\",\n            marginTop: 45,\n            marginLeft: 7,\n            marginRight: 7,\n          }}\n        >\n          {this.state.lan == \"en\" ? (\n            <Image\n              style={{\n                width: Dimensions.get(\"screen\").width - 8,\n                height: 278,\n                alignSelf: \"center\",\n              }}\n              resizeMode=\"contain\"\n              source={require(\"../assets/login-screen-icons/comb-banner.png\")}\n            />\n          ) : (\n            <Image\n              style={{\n                width: Dimensions.get(\"screen\").width - 8,\n                height: 278,\n                alignSelf: \"center\",\n              }}\n              resizeMode=\"contain\"\n              source={require(\"../assets/login-screen-icons/comb-banner-ar.png\")}\n            />\n          )}\n\n          <View\n            style={{\n              borderColor: \"#9fc7db\",\n              backgroundColor: \"#9fc7db\",\n              width: Dimensions.get(\"screen\").width,\n              height: 83,\n            }}\n          >\n            {this.state.lan == \"en\" ? (\n              <Image\n                source={require(\"../assets/login-screen-icons/welcome-logo.png\")}\n                style={{ width: 190, height: 70, alignSelf: \"center\" }}\n                resizeMode=\"contain\"\n              />\n            ) : (\n              <Image\n                source={require(\"../assets/login-screen-icons/Wellcome-Logo-min_ar.png\")}\n                style={{ width: 190, height: 70, alignSelf: \"center\" }}\n                resizeMode=\"contain\"\n              />\n            )}\n          </View>\n        </View>\n\n        <View\n          style={{\n            marginTop: 50,\n            width: Dimensions.get(\"screen\").width - 40,\n            height: 170,\n            backgroundColor: \"white\",\n          }}\n        >\n          <View style={{ flexDirection: \"row\", marginTop: 30 }}>\n            <View style={{ marginTop: 15, marginLeft: 8 }}>\n              <Image\n                source={require(\"../assets/login-screen-icons/Mobile.png\")}\n                style={{ width: 30, height: 30 }}\n                resizeMode=\"contain\"\n              />\n            </View>\n            <Input\n              style={{\n                textAlign: this.state.lan == \"en\" ? \"left\" : \"right\",\n                backgroundColor: \"white\",\n                paddingTop: 24,\n              }}\n              placeholder=\"05XXXXXXXX\"\n              placeholderTextColor=\"lightgray\"\n              keyboardType=\"phone-pad\"\n              returnKeyType=\"done\"\n              maxLength={10}\n              onChangeText={(phone) => {\n                // fixNumbers = phone => {\n                if (typeof phone === \"string\") {\n                  for (var i = 0; i < 10; i++) {\n                    phone = phone.replace(arabicNumbers[i], i);\n                  }\n                }\n                // return phone;\n                this.setState({ mobile: phone.replace(/[^0-9]/g, \"\") });\n                // };\n              }}\n            />\n          </View>\n\n          <View\n            style={{\n              marginLeft: 14,\n              width: Dimensions.get(\"screen\").width - 120,\n              borderWidth: 0.5,\n              borderColor: \"#6ea8cd\",\n              backgroundColor: \"#6ea8cd\",\n            }}\n          ></View>\n\n          {/* <View style={{ flexDirection: \"row\", marginTop: 15 }}>\n              <View style={{ marginTop: 15, marginLeft: 8 }}>\n                <Image\n                  source={require(\"../assets/login-screen-icons/OTP.png\")}\n                  style={{ width: 30, height: 30 }}\n                  resizeMode=\"contain\"\n                />\n              </View>\n              <Input\n                style={{\n                  textAlign: this.state.lan == \"en\" ? \"left\" : \"right\",\n                  backgroundColor: \"white\",\n                  paddingTop: 24\n                }}\n                placeholder={this.state.lan == \"en\" ? \"Enter OTP\" : \"الكود\"}\n                placeholderTextColor=\"lightgray\"\n                keyboardType=\"phone-pad\"\n                returnKeyType=\"done\"\n                maxLength={4}\n                onChangeText={otp => {\n                  this.setState({ otp: otp.replace(/[^0-9]/g, \"\") });\n                }}\n              />\n            </View> */}\n          <View\n            style={{\n              marginLeft: 14,\n              width: Dimensions.get(\"screen\").width - 120,\n              borderWidth: 0.5,\n              borderColor: \"#6ea8cd\",\n              backgroundColor: \"#6ea8cd\",\n            }}\n          ></View>\n          {/* <View\n              style={{ marginLeft: 14, flexDirection: \"row\", marginTop: 50 }}\n            >\n              <Text style={{ color: \"lightgray\", paddingTop: 6 }}>\n                {this.state.lan == \"en\"\n                  ? \"Did'nt Received OTP?\"\n                  : \"لم استلم الكود؟\"}\n              </Text>\n              <TouchableOpacity onPress={this.openChat}>\n                <Image\n                  source={require(\"../assets/login-screen-icons/Call.png\")}\n                  style={{ width: 30, height: 30, marginLeft: 4 }}\n                  resizeMode=\"contain\"\n                />\n              </TouchableOpacity>\n            </View> */}\n          <View\n            style={{\n              position: \"absolute\",\n              right: -15,\n              width: 46,\n              top: -5,\n              height: 245,\n              backgroundColor: \"#0866b0\",\n              transform: [{ rotate: \"6deg\" }],\n            }}\n          ></View>\n          <View>\n            <Text\n              style={{\n                fontSize: 12,\n                color: \"lightgray\",\n                alignSelf: \"center\",\n                marginTop: 12,\n              }}\n            >\n              {this.state.lan == \"en\"\n                ? \"Please Enter Your Mobile Number Here\"\n                : \"يرجى إدخال رقم جوالك\"}\n            </Text>\n          </View>\n          <TouchableWithoutFeedback onPress={this.loginUser}>\n            <View style={{ position: \"absolute\", right: 0, bottom: 60 }}>\n              {this.state.lan == \"en\" ? (\n                <Image\n                  source={require(\"../assets/login-screen-icons/Proceed-Button.png\")}\n                  style={{ width: 60, height: 60 }}\n                  resizeMode=\"contain\"\n                />\n              ) : (\n                <Image\n                  source={require(\"../assets/login-screen-icons/Proceed-Icon-min_ar.png\")}\n                  style={{ width: 60, height: 60 }}\n                  resizeMode=\"contain\"\n                />\n              )}\n            </View>\n          </TouchableWithoutFeedback>\n        </View>\n        <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={this.state.referralModalVisible}\n        >\n          <View\n            style={{\n              marginTop: 150,\n              alignSelf: \"center\",\n              height: 235,\n              borderRadius: 20,\n              width: 330,\n              backgroundColor: \"#283a97\",\n            }}\n          >\n            <View style={{ flex: 1, alignSelf: \"center\", marginTop: -24 }}>\n              <Thumbnail source={require(\"../assets/Icon2.png\")} />\n            </View>\n            <View style={{ position: \"absolute\", right: 6, top: 8 }}>\n              <Ionicons\n                onPress={() => this.setState({ referralModalVisible: false })}\n                name=\"ios-close-circle-outline\"\n                size={30}\n                color=\"red\"\n              />\n            </View>\n            <View\n              style={{ alignSelf: \"center\", position: \"absolute\", top: 70 }}\n            >\n              {this.state.lan === \"en\" ? (\n                <Text\n                  style={{\n                    color: \"white\",\n                    fontSize: 12,\n                    alignSelf: \"center\",\n                  }}\n                >\n                  Please enter the 4 digit OTP code.\n                </Text>\n              ) : (\n                <Text\n                  style={{\n                    fontFamily: \"montserrat_arabic_regular\",\n                    color: \"white\",\n                    fontSize: 12,\n                    alignSelf: \"center\",\n                  }}\n                >\n                  أدخل الرمز 4 أرقام المرسل لجوالك\n                </Text>\n              )}\n\n              <Input\n                style={{\n                  width: 160,\n                  textAlign: \"center\",\n                  height: 30,\n                  backgroundColor: \"white\",\n                  borderRadius: 2,\n                  marginTop: 10,\n                  alignSelf: \"center\",\n                }}\n                keyboardType=\"default\"\n                maxLength={4}\n                returnKeyType=\"done\"\n                onChangeText={(ref) => {\n                  if (typeof ref === \"string\") {\n                    for (var i = 0; i < 10; i++) {\n                      ref = ref.replace(arabicNumbers[i], i);\n                    }\n                  }\n                  this.setState({ referralCode: ref });\n                }}\n                placeholderTextColor=\"#cdd0d4\"\n                // placeholder={this.state.lan === \"en\" ? \"Code\" : \"رمز\"}\n                placeholder={this.state.lan === \"en\" ? \"XXXX\" : \"XXXX\"}\n              />\n              <Button\n                onPress={this.verifyReferral}\n                style={{\n                  borderRadius: 15,\n                  height: 32,\n                  backgroundColor: \"#6ea8cd\",\n                  top: 15,\n                  alignSelf: \"center\",\n                }}\n              >\n                <View>\n                  {this.state.lan === \"en\" ? (\n                    <Text style={{ color: \"white\", textAlign: \"center\" }}>\n                      Login\n                    </Text>\n                  ) : (\n                    <Text\n                      style={{\n                        fontFamily: \"montserrat_arabic_regular\",\n                        color: \"white\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      {\" \"}\n                      تسليم{\" \"}\n                    </Text>\n                  )}\n                </View>\n              </Button>\n              {this.state.lan === \"en\" ? (\n                <Text\n                  style={{\n                    fontSize: 10,\n                    color: \"white\",\n                    marginTop: 25,\n                    flexWrap: \"wrap\",\n                    flex: 1,\n                    textAlign: \"center\",\n                  }}\n                >\n                  {/* To proceed without a referral code, close the pop-up */}\n                </Text>\n              ) : (\n                <Text\n                  style={{\n                    fontSize: 10,\n                    color: \"white\",\n                    marginTop: 25,\n                    flexWrap: \"wrap\",\n                    flex: 1,\n                    fontFamily: \"montserrat_arabic_regular\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  {/* للإستمرار بدون رمز الدعوة، اغلق الشاشه المنبثقة */}\n                </Text>\n              )}\n            </View>\n          </View>\n        </Modal>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}